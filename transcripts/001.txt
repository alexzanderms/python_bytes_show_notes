Michael KENNEDY: This is Python Bytes Episode #1, recorded Monday, November 7th, 2016.

Hello, everybody and welcome to Python Bytes, where we deliver Python headlines directly to your earbuds. This is one of your hosts, Michael Kennedy, along here with Brian Okken. Hey, Brian. How’s it going?

Brian OKKEN: It’s going great.

KENNEDY: I’m super excited to be doing this podcast with you. I’m really thrilled to be bringing these little tidbits to everyone each week or bi-weekly, whatever we decide to go with.

OKKEN: I’m really excited too. I think this is definitely something that’s missing out in the community right now.

KENNEDY: Yeah. The goal is, you subscribe to Python Bytes and if you listen every week, you’ll basically get a lot of the top headlines that you need to know about.
So, let’s jump right into the headlines. The first one I want to talk about it PyData. Specifically, PyData from from Washington D.C. The videos for this conference are out, so if you didn’t make it to PyData D.C. and you want to check them out, there are 64 videos which is about 30/35 hours’ worth of content on YouTube right now. And so, a couple of the videos that I thought were really great, looking through them, one of them was “Elasticsearch and Redis: How and When to Use Them.” And I don’t really know too much about Elasticsearch, so I’m really excited to watch this video and learn more about it.
Another one is the one by Renee Teate. She hosts a podcast and a website called “Becoming a Data Scientist.” She did a talk on advice from her podcast guests about becoming a data scientist, so I think that’s really cool.
One that was also cool was, “Visual Diagnostics for More Information,” about machine learning and basically tuning your machine learning. Then one about data reproducibility and scientific computing called, “You Got Your Engineering in My Data Science: Addressing the Reproducibility Crisis.”

OKKEN: Yeah, I was really impressed with these videos and there’s a couple things that I really liked about them. I liked the format that shows you can see both the slides and the presenter on a little picture-in-picture sort of thing of the presenter talking as well. I think that was done well.
I also really like… These are like 35 minute or half an hour presentations and they’re just pact with data.

KENNEDY: Yeah, it’s not like people are trying to fill an hour, hour and a half. They’re like, ‘Here’s the essence. Let’s go.’ It’s really great. I definitely agree with you on the quality. I’m really impressed with all the Python conferences about how high-quality their AV (Audio Visual) work is and how good of an effort they make to basically record and share, not just with the attendees but with everybody, whatever went on there.

OKKEN: Yeah, it’s pretty impressive.

KENNEDY: Alright, what have you got for us, Brian?

OKKEN: Oh, alright. (laughs) One of the things that came up is another tutorial about easy-args (argument handling). It’s a command line library for making arguments better. I actually didn’t take too much of a look at it. One of the things I wanted to point out was, it’s kind of interesting that we have yet another way to make command line arguments easier to parse. I’ve lost track now of how many extra libraries there are.

KENNEDY: Yeah, let’s see. Argparse, Click, docopt and a bunch more, right?

OKKEN: Yeah, I was just thinking that it seems like a rite of passage now. So, if you’re serious about being a Python developer in Open Source and blogging about it, you have to do two things. You have to write a tutorial about how generators work and you have to make your own command line library.

KENNEDY: That’s awesome; I think you might be right there.

OKKEN: I haven’t done either of those but I actually do like – I’m making fun of it a little bit – I’m glad that people are doing it. If everybody’s trying to solve the problem it means that there’s a lot of people not happy with the current solutions. I’m one of those people who likes to write command line tools, so I say, ‘More power to ‘em’ to write another.

KENNEDY: Yeah, absolutely. More power to them. That’s awesome.
The next one I wanted to talk about is something called safety-db which is on GitHub. Of course, we’ll put all the links to everything we’re talking about in the show notes. You can check them out on your podcast player.
Safety-db is interesting because when we write and deploy our applications, especially web applications because they have the biggest surface area – they touch the most people, they’re publicly out on a server – we don’t just deploy our code. We deploy all the packages that we’re using in our code, and then the packages that those packages depend upon and so on. So, for example, on my training website I’ve got a mailing list and I use MailChimp for that. MailChimp itself depends upon docopt – speaking of command line paragers – and so on. How do I keep track of all these things and know if there’s a security vulnerability? What if there’s a problem in docopt that would let people hack into my server? I didn’t install docopt, maybe it’s not even on my mind and I don’t even realize it got installed. This GitHub set of data keeps that information current so I can check, ‘Hey does my project have any vulnerabilities that I may or may not even be aware of through this hierarchy of dependencies I’m using?’

OKKEN: Wow, I didn’t realize it was that in full. I’m just starting to get into more of the web development aspect of it but I do, just even with what I do now, I do depend on MailChimp and other services. I didn’t even think about that, of looking at their vulnerabilities.

KENNEDY: Yeah, isn’t that crazy? There was something with one of the libraries that Flask is built upon. A while ago, that caused some big hoopla. I’m sure it got patched right away and it was no big deal but if you don’t know that you need to go patch your system, that’s a problem. So, safety-db.

OKKEN: Great, cool. I’ll check it out.
Alright, so next up we’ve got a GitHub project that came to my attention this week called Fast Style Transfer. It’s an interesting library that uses Tenserflow which, I’ve never used Tenserflow. Have you ever used Tenserflow, Mike?

KENNEDY: No, I’m just starting to work on a data science project that is probably using Tenserflow but I’ve only heard good things. I have not yet used it.

OKKEN: Okay, well this one is something that makes me want to give it a try because the demo on it looks really cool. You take a painting or picture of some artist’s style and you can apply that style to another picture, like your own picture. I’ve seen something like that before but what I’m really excited about is this will apply it to videos as well. And ever since the A-ha’s “Take on Me” video, I’ve liked that notion of an artistic style over a short video. It just seems like fun.

KENNEDY: That sounds really fun. So, I could like take my training videos and turn them into like a Van Gogh type of thing?

OKKEN: Yeah, that’d be great. I don’t know if people could read your slides but…

KENNEDY: They would feel very creative while they’re watching it.

OKKEN: I can’t think of actually any commercial reason why I would try this but the artist in me wants to give it a shot.

KENNEDY: It sounds really cool and a chance to play with Tenserflow, also cool.
Another big piece of news that came out this week is pip. So, pip has a full new major version and pip 9 is out. It comes with a couple of new features. One is the ability to check the installed package dependencies to see if everything is set up correctly there. You can use pip show in a less verbose way. You can also say pip list and give it a not required option, which will show you all the packages that aren’t there because of their dependency on a thing; they’re sort of top level, which is really cool. There’s a ton of fixes that came as part of this release. And as you might expect with any major release of some new thing, four days later pip 9.0.1 was released with 5 fixes for bugs that were introduced in pip 9. 

OKKEN: Yeah, and actually, the list of what’s in pip 9 is big. One of the things that is cool is there’s features in there that I didn’t even know existed. The pip check, that’s really cool; I’m, excited about that. But also, they’re changing the list format or they’re going to, so if you do pip list now on 9, it will give you a warning that in the future the default format will be a column format. And a column format you can add now with - -format = column and it’s really easy to read, so I’m excited about that.

KENNEDY: I’m really excited about this as well. Packaging is such a foundational important thing in the whole ecosystem. Anything that makes that better, I’m for it.

OKKEN: Yeah, and I use, like most people, I’m using virtual environments all over the place and keeping track of what’s in every one of them is pretty cool.

KENNEDY: Yeah, it definitely is.

OKKEN: Okay, so I’m going to jump to one. The next topic that you brought up which is a Reddit, actually it’s a sort of a blog post and a Jupyter project about the new MacBook Pro and what Reddit users think of the MacBook Pro. At first, you brought this up and I was like, ‘this is ridiculous.’ I know that half the people are upset and half the people are excited but most of the people I talked to are developers and they’re kind of ticked about all the changes in the MacBook Pro. But this article about incorporating Reddit, it’s not about the specifics of that. It’s using sentiment, it’s talking about sentiment analysis to analyze all the words used in these Reddit threads and try to determine from the words, if people are excited or upset about it. And I had never even heard of sentiment analysis, though I think it’s neat to show a data analysis project that is topical on something people are talking about right now.

KENNEDY: Yeah, because we all have a thing that we care about, wither we work for a company that makes a product or has some sort of public persona or we have an Open Source project, and it would be nice to know, are people liking my work? And this applies to sentiment analysis too, it sounds really cool. I think the MacBook Pro is a great thing to grab because it’s timely.

OKKEN: Yeah, and I think it’d be kind of neat to… it’s interesting to apply it to that and probably safer than applying it to something like current politics because, you know, you don’t want to get in the middle of that right now.

KENNEDY: No, no, no… It’s T-minus 28 hours… nobody wants to get in the middle of that.
Cool, so I really thought that was neat as well. Personally, I have a MacBook Pro. I’m holding out. I’m not buying this new one for a while. I’m going to see where this whole thing shakes out.

OKKEN: Yeah, I guess I didn’t want to get too much into it, but I was curious about that if you were going to get a new one or not.

KENNEDY: No, I was ready to go customize it, turn all the knobs to eleven and say, ‘ship it now.’ I just think that there are too many things that are kind of weird and there’s not enough of a benefit. I’m just going to stick with what I’ve got.

OKKEN: Yeah, and I guess, maybe I’m not doing anything complicated because I’m on a couple year old MacBook Air. I just don’t need very much power, I guess.

KENNEDY: Yeah, that’s good news.
That rounds out our new items for the week. But, what else do you got going on? I know you’ve got the Test and Code podcast going, you’re working on a book, you just did some presentations at a conference. Why don’t you tell people what’s the news around your life?

OKKEN: Yeah, well I’m very grateful for November to roll around because I know a lot of people in start-ups, I’ve heard that people working in San Francisco and stuff work like crazy hours but I’m not used to that. I’m an older engineer and I like my 40-hour work week. But October has been insane. Our projects at work which I can’t talk about, and most of the people listening wouldn’t care about, but we’ve been doing 60 hour weeks lately. And on top of that I was doing the Pacific Northwest Software Quality Conference. It was a couple of weeks ago. I got to talk at that conference and that was a 90-minute talk. Actually, when I was looking at the PyData videos, I was impressed by all the information people got out in 30 minutes because it’s like 3 times the amount of content that I got out in like 90 minutes. So, it was a good experience to talk. I’m actually kind of glad that my first conference experience was a long one, I sure got my jitters out of the way and I’m excited to do a future one.
And the book’s coming along good. I’m working with an editor and this upcoming book is focused on pietest alone.

KENNEDY: That’s excellent. What’s the title so people know what to look for?

OKKEN: We don’t have a title yet.

KENNEDY: The Book About Pietest.

OKKEN: Yeah, The Book About Pietest. But I will definitely share more information with this podcast as it becomes available.
Hey, how about you? What’s going on with you?

KENNEDY: Well, I’ve been on an absolute tear of recording Talk Python to Me episodes. I’ve recorded six weeks’ worth last week.  Given that I spend about 10 hours of research and prep time on each, that meant a very long week but I’m really happy with what I got out. The next three that I have coming, we talked about pip and there’s actually a bit of a crisis in the Python ecosystem’s core Open Source infrastructure. I’m doing a panel session, including the guy who works on PyPI and pip, Don Stufft. That’s called, “Are We Failing to Fund Python’s Core Infrastructure?” That comes out this week. And also, I did something and I love the title: “Parsing Horrible Things with Python” with Eric Rose. And then Martijn Pieters, who is either the top or one of the top guys at Stack Overflow, as a user, contributor, answerer, has over half over half a million reputation in Python. I talked to him about a bunch of the things going on with questions and answers and hard problems that they found on StackOverflow. That’s just super revealing; I’ve learned a ton by doing that.

OKKEN: Wow, I can’t wait to talk about these. Now, is Donald still on pip?

KENNEDY: Donald is still on pip but the short version is he was working at HP (Hewlett Packard), HP went through a huge bunch of layoffs, cut his whole division. And by way of doing that, basically defunded PyPI. There’s other companies like Rackspace and a couple of others – sorry, I’m forgetting the names – that contribute tons of resources in terms of computing and server and bandwidth. Like, the bandwidth and infrastructure charges for PyPI are $40,000 a month, but there’s no funding for people to keep that infrastructure running. Anyway, that’s what that show’s about.

OKKEN: I can’t wait for that.

KENNEDY: Check it out if you guys are interested.

OKKEN: Oh yeah, I forgot to mention, I did a talk with Rafael Pierzina. That’s a podcast coming up for testing code focused on pytest and cookie cutter. That’s coming up soon.

KENNEDY: Well, thank you everybody for listening to this very first episode of Python Bytes.
Brian, thank you for launching a new podcast with me. I think this is going to be a lot of fun. I hope people enjoy it.

OKKEN: I think it will be fun, too. Thank you, Michael.

KENNEDY: Yeah, absolutely. If you are out there listening and you’re like, ‘Oh, I have a great news item I want to send you guys,’ just visit pythonbites.fm. There’s a way right in the menu bar to click and actually send us your news. So, if you find something that’s cool and you want us to cover it in the next episode, be sure to send it our way so that it’s on our radar.
Alright, thank you everyone. Talk to you later. Bye, Brian.

OKKEN: Bye.

KENNEDY: Thank you for listening to Python Bytes. Follow the show on Twitter via @pythonbytes and get the full show notes at pythonbytes.fm. If you have a news item you want featured, just visit pythonbyes.fm and send it our way. We’re always on the lookout for sharing something cool. On behalf of myself and Brian Okken, this is Michael Kennedy. Thank you for listening and sharing this podcast with your friends and colleagues.