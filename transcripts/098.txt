00:00:00 KENNEDY: Hello and welcome to Python Bytes where we deliver Python news and headlines directly to your earbuds. This is Episode 98, recorded October 4, 2018. I'm Michael Kennedy.
 
00:00:09 OKKEN: And I'm Brian Okken.
 
00:00:10 KENNEDY: Hey Brian, how ya doin'?
 
00:00:11 OKKEN: I'm doin' great.
 
00:00:12 KENNEDY: Excellent, excellent. Happy to be back with you for another week's worth of news.
 
00:00:16 OKKEN: Yeah! It's good to talk to ya every week.
 
00:00:18 KENNEDY: Absolutely. So I also want to say thank you to Digital Ocean for making this possible. They're one of the biggest supporters of the show, so thank you to Digital Ocean. Check them out at pythonbytes.fm/digitalocean. Get $100 credit for new users. More about that later. They have some really cool stuff. I was just listening to It's All About the Pentiums. Do you remember that song from Weird Al Yankovic?
 
00:00:39 OKKEN: No.
 
00:00:40 KENNEDY: Oh my gosh.
 
00:00:41 OKKEN: I must have missed that.
 
00:00:42 KENNEDY: We have to for the show. It's like this funny, ya know, Weird Al Yankovic type song. It just popped up for some reason from the 90s and it's all about like tough rappers these rappers who are like, but they're like programmers so they're like insulting each other, right? Like how slow their computer is. One of the insults is my flat screen monitor's 40 inches wide and yours says Etch A Sketch on the side.
 
00:01:12 OKKEN: That's funny.
 
00:01:14 KENNEDY: That's awesome, right? So, here we are 20 years past then or whatever and we're still talking about Etch A Sketch.
 
00:01:21 OKKEN: Yeah, definitely. So, okay. So this article's about Etch A Sketch and it's called Make Etch A Sketch Art with Python and it's fabulous. So background, it showed up in Toy Story with like the, and it's shown up other places of like really, really fast Etch A Sketch drawings happening and I'm sure a lot of people, other people have figured this out too or tried to think, "Man if I could hook up some motors to those knobs and somehow get my computer to do all of this for me that would be cool". So that's what this is, this great article about how this person put together some motors, a Raspberry Pi, and some software and a little bit of woodworking to keep everything all in one place and got it to draw pictures. It's so cool 'cause it's one of those, it seems like a fun project you could do with your kids or somethin' and also it discusses some things like how do you get a picture into line format and he uses something called Canny edge detection and then if you've got a line drawing in pixels how do you translate that into like motor control? And you have to have a path so he uses a library called NetworkX, it's a Python library, to do path. Coming up with nice paths. And then he has some results that he shows some pictures where the starting picture and then the end result of drawing and it's just fun.
 
00:02:46 KENNEDY: You know what I like about this, is it's got this cool IoT aspect with the Raspberry Pis and the motors and it's not just a software project. It seems like it'd be something really fun for people to explore if they're getting into programming and then it also has like a really advanced thing like you could do a really cool like booth or something where you put up an Etch A Sketch and when anybody walks up it could do like face detection and like draw them. Like, you could do all sorts of fun stuff with like the PyTorch machine learning. All kinds of fun stuff. So yeah, this is a great one for people looking for cool projects.
 
00:03:19 OKKEN: Yeah, if you could get that booth thing set up so that we have it ready for PyCon, that would be great.
 
00:03:24 KENNEDY: Yeah, I'm working on it, we'll see. So one of the things I really like from PyCon 2017 was the keynote by Instagram. How they almost magically migrated their entire code to upgrade Django, completely switch from Python 2 to Python 3, and they did all of that without branching continuously in production, which was awesome, right?
 
00:03:48 OKKEN: Yeah, that was an incredible talk, yeah.
 
00:03:50 KENNEDY: And so certainly that was one of the major users of Python, but if you look at desktop applications, it may be that Dropbox is actually one of the most popular and quite large desktop apps in Python that there is.
 
00:04:04 OKKEN: I would venture to say that's true, yeah.
 
00:04:06 KENNEDY: Yeah, so the Python, they have over a million lines of code in Python, a million lines of Python, and it's installed at hundreds of thousands of desktops, at least, right? So the big news is Python has had a really big gravitational pull around Dropbox. We've had some of the core developers working there, obviously Guido van Rossum works there. That's a big deal. So the fact that they were on Python 2 is kind of a weird juxtaposition of like these two worlds, right? So what's really cool is they have now migrated to Python 3. It's not just like they rolled out a web app in Python 3 where they control the servers, but they have done some really incredible engineering to allow them to ship Python 3 into these more modern operating systems, enabling interesting things like kernel level, smart sync, and all sorts of crazy stuff that's happening. So that's what we got this week. That's awesome, huh?
 
00:05:04 OKKEN: Yeah, that's really exciting, actually.
 
00:05:05 KENNEDY: It is exciting and what's great about their write up is it talks a whole lot about the challenges that they faced, why they wanted to switch, all of those kinds of things. So they said they've relied on Python 2 for many years, most recently 2.7, and they actually began this transformation from 2 to 3 in 2015. But if you go through and read that article, you'll see like a lot of creation of technology had to be done in order to make this switch. So in their previous version, their Python 2 world, they were using freezers, so like py2app, py2exe. I think it was bbfreeze for Linux and they were also exploring PyInstaller, but they ended up not using PyInstaller for some reason. They were using those types of things to package up Python, and now what they're doing is they actually had to build native apps. So using Visual Studio for Windows, X code for macOS, to build like .app files. What they're actually doing is they're hosting the Python run time in their native apps to bootstrap up their apps in order to get the deployment story working better.
 
00:06:10 OKKEN: That makes sense but that does not sound easy.
 
00:06:12 KENNEDY: No it doesn't! They actually built a way so they could host either Python 2 or Python 3 and flip a flag so that they could actually do that concurrently, right? So they built the Python 2 version and they started shipping that out and got that working, and then they slowly, for different sets of users, started turning on the Python 3 version on the same type of code there.
 
00:06:34 OKKEN: Wow. That's cool.
 
00:06:35 KENNEDY: But they talk about why they had to do it. So, for example, smart sync, which I actually just bought from DropBox recently. It's pretty awesome. So I've got like almost a terabyte of stuff in Dropbox with all the course stuff and whatnot. The videos and so on. And smart sync will let you go to your finder or your explorer and show you all of your files and some of them are in your hard drive and some of them are in the cloud and you can just like double click them and they just open, you know? Or I open them some other way and they like... Dropbox hooks into that and says oh, hold on, we got to download that. Now you can have it, right? So it's really great for like saving drive space and whatnot. But you can't do that, you can't install that kernel type of stuff with Python so they needed their native apps anyway. They also talked about why they might switch to Python 3. They said there's two major features that we really care about and there's pains that we're trying to get away from. The exciting features were they're really interested in type annotations. Remember mypy is coming out of Dropbox. Guido van Rossum is working on that. And mypyc that takes type annotated Python code and compiles it to C extensions also is coming from Dropbox. So they're really doing a lot with these type annotations which is interesting. And they're also really interested in async and await. Apparently that helps a lot for what they're doing.
 
00:07:51 OKKEN: Yeah, asyncronus copying of files. You'd think.
 
00:07:53 KENNEDY: You would think a lot of I/O happens on the network and on the drive.
 
00:07:56 OKKEN: Yeah, definitely.
 
00:07:57 KENNEDY: So that was the positive. The others problem is they said that a lot of the tool chains is really old and crusty. Like for example, they had to have a separate fork of CPython so they could compile it with a modern C compiler, like Visual Studio 2013, instead of something super old and not supported on Windows. And they're like this is just not cool. Like why are we maintaining our own fork of the CPython just so we can compile it? Anyway, there's a lot of weird stuff they had to get away from with Python 2, right? And that's not getting better. Yeah, so they talked about all this stuff. A lot of details. And they also said we're planning a bunch of future posts so we're going to talk about how they report crashes on Windows and macOS and how they use that to debug both native and Python code. That's one of their posts coming.
 
00:08:44 OKKEN: That's cool. Yeah.
 
00:08:46 KENNEDY: How they maintain a hybrid Python 2 and 3 syntax and what tools help them do that. Another post. And then a sort of war stories. Very best bugs and stories from their Python 3 migration. So I think we have three topics picked for the next couple of Python Bytes.
 
00:09:02 OKKEN: Yeah, if they come out in time. Yeah, sure.
 
00:09:04 KENNEDY: Yeah. For sure. Well, maybe they'll even do a presentation about this at PyCon.
 
00:09:08 OKKEN: Yeah, let's hope.
 
00:09:09 KENNEDY: Let's hope. Are you speaking at PyCon? Are you going to submit something?
 
00:09:12 OKKEN: I probably am. Yeah. I haven't yet, but there's time.
 
00:09:15 KENNEDY: Sorry, I'm going to submit something and I'll just put your name on it. That'll help.
 
00:09:20 OKKEN: Yeah, if anybody else wants to do that too. You just submit somethin' and put my name on it and I'll just, you know, I'll wing it once I get there.
 
00:09:27 KENNEDY: Well, ours might be a joint one.
 
00:09:28 OKKEN: Oh, that makes more sense, yeah. That's right.
 
00:09:32 KENNEDY: But where would we get the resources?
 
00:09:34 OKKEN: You lined it up for me. Thanks. So I wanted to talk about some resources for PyCon and its not just... These are targeted at PyCon but it really is really any conference, technical conference I think. And a lot of the regional Python's conferences have similar things. So we're putting up a bunch of links in the show notes we've got. They have a nice speaker page that's a kind of a top levels, what it's like to speak there and stuff. Actually, last year being my first time talking at PyCon, I think that I would encourage really anybody to try it because it's a fun experience. So take a look at the speaking page. And then there's proposal tips. So the first thing you got to do is you submit a proposal and that can be nerve wracking, but it really shouldn't be. So there's a few resources I'd like poke people to. There's a talk proposal, resource page, on the PyCon 2019 site and in there there's also some links to some external articles and stuff. And then including some people who have shared past proposals, and even failed ones and why they think they failed. And then Marietta. I don't know her last name, but she's the core developer and she recently published her set of proposals, the ones that have been accepted, and I really like 'em, actually. I like to look through those and some of these are really nice, clean examples and make me think that maybe it doesn't have to be as complicated as I thought it was. So there's those. That's nice.
 
00:11:01 KENNEDY: Yeah, that's really helpful and, you know, like you said, this is helpful however you want to get started. And you don't have to get started at the top level PyCon. You could always do something local.
 
00:11:10 OKKEN: Yeah. And then one of the things I wanted to bring up also is before attending PyCon, I didn't know what poster session was. I'd seen it a lot, but I didn't really know what it was. Or I'd seen it mentioned. And a poster session is... Don't dismiss this! This is a pretty cool thing. The PyBites guys did a poster and what happens is in the expo area, where we were and a lot of the companies are, that's really cool, but it isn't on Sunday. Those people get out of there and on Sunday, that area is, you know, there's a job fair thing going on, but there's also these poster sessions where people have these areas and they get a few feet of back space and they get their poster put up and a little table for them and so the people that are there to talk about it, if you have a like project or something you want to talk about, that's a good way to get your feet wet and you don't actually have to present a talk but you can talk with people about whatever you're passionate about.
 
00:12:10 KENNEDY: Yeah, and you can meet some pretty interesting people that way as well. And you also give a link, a shout out, to Jason Wattier's blog post, You Don't Need to Be a Pro at Python to Crack the Code of PyCon, which is great.
 
00:12:23 OKKEN: And that's a really good article about how somebody new to Python went to PyCon and still got a lot out of it even though they weren't an expert. One of the things he mentions is that at the expo hall, everybody there is trying to sell you something. I just wanted to say that we're not. We hang out there and we just want to talk with people and be there so that people can come up and say hey.
 
00:12:45 KENNEDY: Yeah, that's right. It's a great place for us to meet people. We typically lose our voice by the end of the second day.
 
00:12:50 OKKEN: Yeah, it's ton of fun. Yeah.
 
00:12:52 KENNEDY: It's great. So one of the reasons that we get to go there is because of people support our show and sponsor our show, like Digital Ocean. I just want to call out a cool feature that I saw them recently talking about and that I think people might find actually super useful. So when you create, normally you create a virtual machine or some form of infrastructure as a service in the cloud, you get like a little drop down like well, what do you want? Ubuntu, you want. You maybe have it pre configured for this type of service or that. But with Digital Ocean, they have this thing called Bring your Custom Image to Digital Ocean. So you can, you know, spin up a virtual machine and get it exactly the way you'd like it to run, perfectly set up on your system with your company, and then you can just upload that and say now, when I create a new thing on Digital Ocean, use that.
 
00:13:41 OKKEN: Oh, wow.
 
00:13:42 KENNEDY: Isn't that cool? So all you got to do is make the image, upload it, and then you can just log in and say I'd like to choose from my custom image and hit start and off it goes. So that's pretty cool. There are a few simple restrictions on what has to be installed so like they can manage the virtual machine from the outside, but it doesn't seem very restrictive to me. Anyway, it looks like a great thing. You can check it out on our blog, but if you want to get started and get the credit, pythonbytes.fm/digitalocean.
 
00:14:06 OKKEN: Nice.
 
00:14:07 KENNEDY: Yup. This may be a little bit repetitive, but Brian, have we talked about GUIs?
 
00:14:11 OKKEN: Yeah, yeah we have.
 
00:14:13 KENNEDY: Actually, this one I want to share with you because I think it's actually super awesome. I think we started this whole half a long a go when I said I really just would like, what did I call it? I called it Proton. I said I want Electron JS for Python. I said we should call it Proton as well 'cause of the p. But someone has come up with a great way to use Electron, which is Election JS is like a chrome and node type thing that stuff like Get Up's Atom Editor, Visual Studio Code, Slack, all those things are built upon. Those are nice lookin' systems, right? You write HTML, you can use cool javascript stuff on the front end, and then but on the back end you got to do node and javascript.
 
00:14:56 OKKEN: Yeah, I don't want to do that.
 
00:14:57 KENNEDY: Well, and there's things you miss out on. Like what if you want to do something with machine learning? Like javascript doesn't have good machine learning tools to run locally, but if you had Python, you could use like GPU accelerated local stuff. That would be awesome. So it's not called Proton, but I will point you at something called Electron Python. It's basically the same thing without the name. So what it is is it's someone has taken Electron. It's not even a new project in that sense. It's more of a way of using two different projects. So take Electron JS and take Python. And on Python, there's a thing called zerorpc, which is like a raw sockets communication layer, instead of HTTP. So this really simple local communication layer. Use that as a server and then use Electron to just show your app with your javascript and HTML and instead of talking through Electron to Node, you talk through Electron more directly over to your Python code. So it's awesome. You get exactly the same thing that you're building, say, Visual Studio Code with. You could do that but have Python as the implementation on the backend. And if you need to pip install anything, you do it. It gives you like native access, so native menus, notifications, automatically update your app, all that kind of stuff. It's pretty awesome.
 
00:16:18 OKKEN: That is cool.
 
00:16:19 KENNEDY: That's really cool, right? The question becomes, though, still, like how do I get that to somebody, right? Great, so I have this Rube Goldberg contraption that I've created of like Chrome at javascript, Node, and this Python code, which then also depends on Python. Everything you pip installed, right? Like deployment can be a challenge. So one of our listeners, Andy Bocca, sent us a really nice message and wrote a super informative blog post of building a deployable Python Electron app. Takes you through all the steps of how we packaged up Python, its dependencies, how we created it for macOS and Windows, all sorts of stuff.
 
00:16:59 OKKEN: Yeah. No, that's fun, actually. That's pretty cool. Plug it with the code available so you can try this out and all follow along.
 
00:17:07 KENNEDY: Yeah, it's got the code and all sorts of stuff. So it's a pretty good working example if you would like to try to create this and use this and if people do create an app with this, please put a comment on the show notes. We'd love to see it. Or shoot us a message somehow.
 
00:17:19 OKKEN: Yeah, there's a lot of projects I want to try to do with something like this, so yeah.
 
00:17:24 KENNEDY: So I'll leave you with one final thing. Like right, he goes through this long process of here's how you run this script into that script and then bundle this together. You know, use pyinstaller and then use npm package or something to suck in the py and so there's like a lot of stuff going on. So he ends the deployment post saying and somebody please wrap Electron Python into an IDE so that in the future, all we have to do is click a build button like we could 20 years ago.
 
00:17:51 OKKEN: Yeah, yeah. Nice.
 
00:17:53 KENNEDY: Yeah, it's pretty nice.
 
00:17:54 OKKEN: I guess it's doable now but it's still a question of is this really easier than using like QT or something like that now?
 
00:18:02 KENNEDY: Well, he talks a lot about that and he says look, if your choice is to us QT or, say, wxPython or TkInter, in all of those, maybe with slight exception of QT, there's really like one or two people working on it part time and when you use Electron, you're using Chrome and all the JavaScript frontend frameworks you might want to select with your JS and you have Google and all the web developers in the world who are all basically pushing that UI platform forward.
 
00:18:33 OKKEN: Okay, well there's that, so.
 
00:18:34 KENNEDY: That was the argument of what the two guys who were building this. You can either take that as a good argument or not, but that's what they were saying.
 
00:18:44 OKKEN: Yeah, now that's it doable, it'll get easier as time goes on and then people add to it, so.
 
00:18:49 KENNEDY: Alright, come on Pytron folks. Give us that build button.
 
00:18:54 OKKEN: Give us a build button.
 
00:18:55 KENNEDY: Give us the build button. We don't want to know the internals, come on. Alright, so probably enough on that but that's actually one of the more promising ones and I might give up the nickname Proton. I dunno.
 
00:19:06 OKKEN: Yeah. We should just tell 'em you can use that if you want.
 
00:19:10 KENNEDY: Yep, they can have it. Awesome. Alright, so what's our next one?
 
00:19:13 OKKEN: I just wanted to give a shout out to pluggy. If anybody doesn't know that I kind of have my fan of pytest.
 
00:19:19 KENNEDY: Really?
 
00:19:20 OKKEN: Yeah. And a part of pytest is one of the things that pytest... Pystest actually grew out of the py project. Another option is pluggy, so there's a ton of pytest plugins that you can add on and I use quite a few of 'em and the way these plugins work is through this plugin system. It's a plugin management and hook system. There's often a problem if you got an application that has a lot of possible customizations for other people to do but you want to be able to provide plugin or hook capabilities but you don't want to expose too much internals and you also want to isolate this API, this interface so that you know that you can do refactoring and rewriting stuff and you're not going to break plugins. Pluggy's an option and I think it's a really good, solid option. I have noticed that a few other projects have used this. The, I don't have a list of those, but I don't think we've covered it before, and if we have, my apologies, but it's kind of neat.
 
00:20:19 KENNEDY: I don't think so.
 
00:20:21 OKKEN: And my little side project of cards. A lot of people said well, if we're doing like task management, there's going to be extra little things people want, maybe a different list of things. You're maybe not an owner but you maybe need priority and maybe time estimates should be in points versus hours or things like that. A plugin system might be good. So I'm actually thinking about trying to put pluggy into this little side project of mine.
 
00:20:45 KENNEDY: Oh yeah, that's really cool. Yeah, this is used by pytest, by tox, by dovepy, so certainly is getting so really world testing. No, it's great. You know, I like these plugins as an idea of saying I would like to let people change how this works without just letting them actually change the project. Yeah, it's cool. Alright, are you ready for something scary, like actually, truly scary?
 
00:21:07 OKKEN: No, but let's talk about it anyway.
 
00:21:09 KENNEDY: Alright, this was sent over by Eduardo Orchina. This is on Bloomberg, so on bloomberg.com. It's Bloomberg business week. It's a pretty serious article and it's pretty deep reporting for something that has happened and it's called the Big Hack: How China Used a Tiny Chip to Infiltrate US Companies. And other companies, but they were thinking, they were aiming them actually at US companies and defense contractors and stuff like that.
 
00:21:37 OKKEN: Oh, creepy. So tell me more.
 
00:21:39 KENNEDY: Alright. So, first of all, when they say a tiny chip, I don't know. I don't know what you guys are visualizing, but if you hold up, say, a US penny or like a Euro cent, and you look at the lettering on there, the chip was the size of one of the letters.
 
00:21:59 OKKEN: Oh!
 
00:22:00 KENNEDY: Like so where it says the year the penny was pressed, it's like the size of like the two. And they decorated it as like a different type of component that goes onto the chip. So this is a really a long article, I say quite deep reporting. And it says this was an attack by Chinese spies that reached almost 30 US companies. How they know that it was 30 and not like 37 or something is actually really interesting. Including Amazon and Apple, by compromising America's technology supply chain. So what happened was they found out that there was some spies in the Chinese government that threatened the subcontractor of the subcontractor of a company that made motherboards for many data center servers.
 
00:22:44 OKKEN: Oh, yeah.
 
00:22:45 KENNEDY: And they said, well, you have a couple choices. One, we can bribe you to install these little tiny chips or we can threaten you with inspections of your factory if you don't install these chips and keep it quiet. And pretty much they found out that some of these subcontractors were like well, we want to keep our business, so chips go in.
 
00:23:04 OKKEN: Oh, geez.
 
00:23:04 KENNEDY: Yeah, and so this is all started when Amazon went to acquire actually a Portland-based company called Elemental Technologies which basically helped with like streaming and video compression. As part of the purchase process, they said well, let's do some due diligence on you and they actually sent off this server hardware that they were using off to some other company. I think it was in Canada or somewhere. And they said there was a nested on the server's motherboard the testers found a microchip not much bigger than a grain of rice that wasn't part of the original motherboard's design. Like I don't even know how they found that, right? Like that's insane. And so they found out that these motherboards were used by the Department of Defense and CIA drones and Navy warships and Apple and Amazon and all sorts of places and they're like whoa. What's going on here? So they did a bunch of like spy on spy stuff and they found out kind of like what I told you. They realized that these chips were basically opening backdoors in the network of all of these servers, which would then go download bigger bits of code would actually take them over and you could just log into them. But they were interacting with these other servers somewhere on the internet, so they hacked those servers and they figured out that 30 companies' machines were interacting with that server, and that's how the number is 30.
 
00:24:20 OKKEN: Wow, okay.
 
00:24:21 KENNEDY: Anyway, the whole supply side chain thing is pretty scary but this is not technically a software topic but, you know, I think it's something that we in the technology industry need to just be aware of because this is pretty crazy, right? And there's no software that will tell you whether or not this is a problem, right? 'Cause this is at the chip level.
 
00:24:40 OKKEN: Yeah. Geez.
 
00:24:42 KENNEDY: Anyway, there. Let's leave it with that positive note.
 
00:24:46 OKKEN: Have a nice day, everyone!
 
00:24:49 KENNEDY: Have a good day. Apparently the 30 companies who had their servers interacting back with the hacker controller command and control servers have been notified silently. Yeah, but anyway, there's a bunch of inside reporting and stuff. It's quite interesting, so check that out. Well that's it for our official items. Anything else you want to share, Brian?
 
00:25:09 OKKEN: No, I just want to rave about your new course.
 
00:25:11 KENNEDY: Oh, thank you! The new course is going really well, so, you know, the Async course that talks about asyncio, async and await, multiprocessing, all that stuff. It needed to exist and I'm so happy I built it.
 
00:25:24 OKKEN: Yeah, what I wanted to bring up is I know async is hot because a lot of people thinking about the new async stuff that came into the more recent Python 3s, but it's not just that. So one of the things I like about the course is you do talk about the new...
 
00:25:42 KENNEDY: asyncio and aiohttp.
 
00:25:45 OKKEN: Yeah, those. But you also, it isn't just that. It's also things like if you are concerned about that, you're probably concerned about things like I just want to make stuff run faster and so there's other options too, like multithreading and multiprocessing and when and how to use different ones and kind of how to decide that. And then even if you want to make it faster, there's things like, do you cover Cython then?
 
00:26:09 KENNEDY: I do cover Cython.
 
00:26:10 OKKEN: Yeah, so it's not just the more recent things, it's a big full picture. And it's not even that long. It's just like five hours or something, so.
 
00:26:19 KENNEDY: Yeah, it is. Thank you so much for that. That's really nice of you to say so.
 
00:26:22 OKKEN: Good job.
 
00:26:23 KENNEDY: Yeah, thank you very much. Happy to do it. And happy to meet up with you and talk about the news as always.
 
00:26:29 OKKEN: Yeah, thanks. Talk to you later.
 
00:26:31 KENNEDY: You bet. Bye.
 
00:26:32 OKKEN: Bye.
 
00:26:34 KENNEDY: Thank you for listening to Python Bytes. Follow the show on Twitter via @PythonBytes. That's Python Bytes as in b-y-t-e-s. And get the full show notes at pythonbytes.fm. If you have a news item you want featured, just visit pythonbytes.fm and send it our way. We're always on the lookout for sharing something cool. On behalf of myself and Brian Okken, this is Michael Kennedy. Thank you for listening and sharing this podcast with your friends and colleagues.
 
