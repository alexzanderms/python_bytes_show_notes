00:00:00 Hello, and welcome to Python bytes, where we deliver Python news and headlines directly to your earbuds. This is Episode 212. I can't believe the numbers keep going up. No, we're recording this December 16 2020. I'm Brian Aachen, of course. I'm Michael Kennedy. I'm Cherie ashkenaz. We have a guest.

00:00:22 So yes, Sherry, it's Yeah, it's great to have you here. Thanks for coming so much for having me. Great to be here. Yeah, you got some cool projects. And you wrote to us and said, Hey, here's a project I'm working on. And we're like, Well, why don't you just come on the show? And, you know, tell people about it. So we'll get to that later. And there's a lot of fun. Yeah, Ryan, you should do something with PI test. I heard it's popular. Yeah. So yeah, it might not be a surprise. I am a fan of pi test. But I wanted to shout out because the people pi tests have been working pretty hard to make things better. And they've got. So right now we've got Python. Python 6.2. I think I think we're at 6.2. point one now. But 6.2 came up recently. Ooh, neat. Look. changelog. Cool.

00:01:07 So there's a few things that I really like, that came up with the 6.2 release. So pi tester, there used to be I mean, plugin authors are going to be the only ones that really care about this, maybe. But there was a a fixture called tester that, that works fine to test your plugins. But pi tester is way better name. And it also uses Python path lib instead of the old

00:01:37 the AAS path. Well, it was it was a PI path thing. It was a similar to path lib but their own thing to this backwards. Yeah, they would use what's built on. Yeah. A couple other features. I like verbose mode. Well, there used to be a way to, you had to, if you had a test that was skipped, or x failed, or x passed, you could add a reason but to get the reason was a little, little extra work. And now you can just turn it in divert. If you pass verbose mode, you get those reasons out, that's pretty cool.

00:02:13 And the last one, I wanted to highlight last feature that came up is a change to the monkey patch. So, um, monkey patch is, is a way it's kind of like mocking it's a little kind of like, a way to easily mark. But the, the thing that changed was a context manager. So they added a context manager.

00:02:36 And so we either within a test, you can just for part of the test, do the, the the patch change, or it's also exposed in at the pipe test, namespace level. So you can even use monkey patches in helper functions and stuff like that. So. Okay, that's pretty neat. How's that compared to? Like, the patching with context block? Well, yeah, it's exactly like that. So you could use a width block to, to patch it. So antastic. Cool. I think this is great. Like, it's cool to see pi tests moving along. And, you know, there aren't really that many challengers these days. Right. It's, it's pretty much the leading way to go. Yeah, I mean, there's still projects that use unit test. And there's, I don't know why there's still using it. But by test is there, no one that makes sense to me is I don't want to dependency I just want to be able to run it. Okay, but yeah, sure. There's just that there's like events? Well, I mean, how many projects don't have dependencies? Oh, yeah, that's true. And the other, the other bit, I kind of like it being outside of Python, because you can,

00:03:49 like, let's say you upgrade your Python, you don't think you really want to upgrade your test runner at the same time, you're upgrading? Well, and also you get a lot higher velocity, right. Like the reason they didn't bring requests in to replace the internal URL HTTP stuff in Python was like, it's gonna slow request down. Yeah, yeah. So it would slow pi test down to. And then I got a ping, kind of On a related note, from somebody that was using a plugin I wrote called pi test check, and said, Hey, I'm having trouble running this with PI test six. I'm like, Oh, my gosh, people are using that. So yeah, apparently there are some people using it. So I updated it to run with.

00:04:30 Yeah. Sweet. Sherry, do you do any testing? Um, I not with PI test. I don't experience with that. Yeah. Yeah, definitely. Definitely. Good one. I know of a good book if you want to learn, so.

00:04:47 That's right. That's right. Well,

00:04:50 the next thing I want to talk about, it takes a minute for this to sink in here. And it's sequel lite as an application file format. So we've all heard of sequel lite right?

00:05:00 It's a database, but it's not a server, it's just the file. And it's embedded into your application. So it's in process, which actually makes it incredibly fast, right? It also pipe sequel light ships with Python. So you don't have to have any dependencies even to use it, you just, you know, connect to it, you probably do want to have dependencies like, say, SQL alchemy, or something like that. But you don't have to, right. So there's a cool thing that's actually part of the documentation, more or less for SQL Lite. But it was brought to my attention by

00:05:36 over here, I pull my notes by john. But both both my john Bob Meyer, thanks for letting us know about this one. And the idea is that we so often if we have some kind of custom file format for our application, whether it's a command line tool, or GUI, or maybe even a website, although those often default to databases Anyway, you have to think about how am I going to store this file? Should we put it in JSON? And we could use some XML? Brian? Does that sound good?

00:06:09 No, no, no XML. But you know, JSON is super popular, right? But even with JSON, you've got to figure out okay, well, these are the blocks. And here's how you read it. And if some other application wants to talk to it, they need to work with it. And there's all these really interesting advantages of saying, well, let's just have a single binary file that is a sequel lite database. And just, that's our file format, much like doc X has it, you know, is the file format for word, or Excel x XLS. x for Excel, or, you know, you name it, right? All these different apps have their own file format. Camtasia has its own and so on.

00:06:48 That could easily just be a sequel lite file. So if you go down here in this thing, there's a bunch of things that are highlights, it says, look, simplified app development, you don't have to write any code to figure out how to work with this file, right? Like, you've already got the sequel lite built into Python. Everything's contained into a single file, right? So you can just easily move it around. It becomes query Abul because it's sequel, right? You just select star from table where such and such. And now your your app has search built in. That's pretty cool.

00:07:23 It's a bunch of tools. Like we've talked about beekeeper studio and things like that, they would just look load this up and work with it. Right. So anything that works with SQL lite, is now working on a cross platform, right? 32 bit 64 bit Windows, Mac OS. Atomic, right. So multiple things can be working with it concurrently. If you make changes to it, you could do like three changes and something goes wrong. An exception. Just rolls it back. These things are all pretty cool, right? Yeah. Yeah. So let's see incremental updates. This is another one that's interesting is with say, a job, something like a JSON file, you'd have to load the whole thing up. Unless you're doing something really intense, you would change something small about the file and you write the whole thing back. But the way sequel lite works is you just make changes to little spots in the binary file as you insert stuff. So REITs are a lot simpler.

00:08:23 Super extensible. And what else performance, it's a lot faster than you know, the they have compared some other styles. Like you could have a pile of files like Git or something like that. It's multi threaded safes and multiple processes can access in multiple languages, all sorts of stuff. And also finally documentation. Like you want to document how you your file format works. You just described what the tables are and what the columns mean. And that's it.

00:08:48 What do you think?

00:08:51 I actually really like using a single file, database styles like, like sequel lite

00:08:59 for persistence layers, because you don't really have to think about it at this point. I'm also used tiny DB for a similar reason. But yeah, tiny DB is addressing I think, that uses JSON blocks, little bunch of JSON files. It kind of organizes, right? Yeah. Something like that. I'm sorry. What do you think of this?

00:09:18 Yeah, it's, um, it's, it's, this is actually new material for me. So I'm honestly Me, too. I looked at it. And I'm like, Well, of course, I know. I can use SQL lite, but I just hadn't really put it together like, well, this is actually a really cool use our file format that other people can use. Yeah.

00:09:35 Yeah. There's also a really cool project called Data Set da TAS e TT e or something like that.

00:09:48 And another one related to it called dog sheep, which is a really interesting project that takes all these SQL, light and SQL oriented data inputs and allows

00:10:00 To bring them together and do reporting and analysis on them. So I did an interview recently, with Simon, guy behind the project over on talk, Python is not out yet, but it's already recorded. And it will be out. It's, there's just all these interesting things you can do once data gets into these common formats. So this just is another example. And he also pointed out that there's all these different sequel lite databases already on your machine. Like the photos library. for Mac OS, that's a sequel lite file. Wow. Yeah. So there's like hundreds of these on your computer, and you just, you just didn't know it.

00:10:37 Anyway, this, this is hopefully solves some problems for people trying to create, you know, what are we gonna do for our app format? You know, our equivalent of docx? What's that going to be? Well, it definitely could be one of these.

00:10:49 Yeah, that's pretty cool. Yeah, definitely.

00:10:59 Next up, Sherry, tell us about your project. This is the one I mentioned before. Yes. So um, I'll start off by saying, I noticed that kids programming books are either really abstract, or they don't teach the reader how to write a simple program, or they're too. It's either that or they're too intensive in the format of a textbook, or a book made up of a lot of tutorials with step by step instructions. And so that's why I thought of taking a different approach by creating a programming book in the form of a picture book that tells a story with complete computer programs that represent real life situations. So my latest book is called a day in code Python, and it's now live on Kickstarter, it tells a story using Python programs that describe real life situations and the code. And so for each two page spread in the story, there's a code page that has a complete Python program that describes a situation in the story, and a full page illustration next to it that shows the scene that's being described. So in that way, the book is presenting Python code examples and a continuous story. And the code is explained below each program. And each program presents a new Python concept. And so you might be wondering, like, Why did I choose a picture book. And so there's a few main reasons why I thought of doing that. And so of course, the most obvious is that a picture book is is fun and colorful, and who doesn't like a picture book. But I also wanted to show that everyday events can be described with the logic of code. And I think the programming concepts can be better understood by making the code relatable. And I also wanted the book to be compact and show code examples conveniently. So as a beginner, you don't need to dig through a big book, looking for basic code examples. And also about having nice full page illustrations. My aim is that the reader and kids especially will enjoy the book in the same way as a normal picture book that is flipped through again, and again. And while they're enjoying the pictures, they'll be looking at the code to and their understanding of programming concepts will be reinforced. And so this book will be in the same format as my first book a day in code, which is written in the C programming language. And that book was actually released a few weeks ago on Amazon. And I had previously launched a Kickstarter campaign for it. And after delivering the book, I got a great response from kids to college students to adults. So it's really for all ages. And so now I'm focused on creating a Python version of that book. And you can preorder. Yeah, I think Python book makes a lot of sense, because it's the most popular learning programming languages these days, right? Yeah, it's definitely been gaining in popularity. Um, yeah, very popular. It's everywhere. I like the idea of just sort of letting it wash over kids, right? You don't know, maybe the goal is initially might not be to teach them programming. And have them come out the other side of interact with the book, actually writing code, but kind of seeing the examples and just making code something that you kind of talked about, like reading or like writing or like history or, or anything. So it's a cool format. What do you think, right? I think this is great. So do you have like a

00:14:07 target age in mind or so that's why I say like, Well, of course, being a picture book. It's, it's great for kids. But I've also gotten a lot of people, adults who say that they enjoy it too. And it's just a fun format for anyone to enjoy starting to learn programming, or even just looking at it as a reference, even if you're experienced in programming, or maybe you want to refresh your memory. It's just a convenient way to look back at simple code examples that go over all the basics of Python. So functions, dictionaries, lists, tuples, and all that stuff.

00:14:45 Yeah, and it's almost funded on Kickstarter. So sounds like you're gonna make it happen. You're like $1,000 away, and I'm sure that you've actually invested.

00:14:55 Yeah, I'm gonna like order one. So

00:14:59 thank you.

00:15:00 Yeah, um, so but when once you get it funded out, when do they come out? So right now the estimated delivery time is in April, and it'll be a special edition book. So I'm actually getting it printed at the US based facility. Um, that allows me to print with glossy paper, 100 pound paper and have this feature of having printed in sheets at the front and back of the book, which and so these features are available once the book goes on Amazon. So cool. Yeah. Yeah. Great project. Happy to see it, gaining some subtraction. Hopefully people can make it happen, because it'll be neat. Thank you so much. Yeah, absolutely. So Brian, before we move on to the next one, speaking of books, maybe tell people about what we're up to. So they can support us if they wish. Yeah, well, the best way to support

00:15:54 let's say me, is by picking up a copy of Python testing with PI test.

00:16:01 I still get feedback all the time, that of people thanking me for writing this because it helps them in their job, helps them get stuff done better. So it's really awesome. Yeah, absolutely. And then, if they want to learn some, some more about all sorts of types of Python, they should probably check out they should like we've got a couple of new courses. I just released the fast API course a couple weeks ago. And that is such a neat framework, also of our Excel to Python and the Python memory management tips, deep dive course. So those and many more are out there for people to take. They're interested, they want to learn Python. There's a whole bunch of ways the day in the code, pi test and then these courses as well. I always forget the memory management one. Yeah, that's That's ironic, isn't it?

00:16:50 So

00:16:54 I agree. I don't. Are we doing this next? Okay. Yeah, this is what's next. Yeah. Nice. So I,

00:17:02 so I can't believe we haven't done this. But actually, partly because I can't believe I just noticed this. So I didn't know about this. Yes, Barry, there is a price.

00:17:14 So it's pretty funny. So this is this is that? It says it as as your dot Python labs COMM And it used to be just normally at WWW dot Python labs comm so let's move on. But this is back from this kind of an inside Python joke, as back, Tim Peters posted it in 2004. And apparently, it's a question there was a question from Barry. It just says Barry, I'm assuming it's very Warsaw. Yeah, I would guess ask the question. What is Python labs now? Or is there a Python labs now? I don't know. Guido owns the domain name, which is probably the biggest claim to Python lab hood. There is. And and then Tim, Tim Peters replies with a very Yes, Virginia there is a Santa Claus esque answer. And it's I just encourage people to go read it. It's hilarious.

00:18:09 There's stuff like bury your little friends are wrong. They've been affected by the skepticism of a skeptical age. Yes, Barry, there is a Python labs. It exists since as certainly as love and generosity and devotion exist. Alas, how jury would be a world with no Python labs. So it goes on like that. And it's it's pretty funny. So encourage people to check it out. And you know, how funny

00:18:34 Have you seen this before? I've never seen this and apparently is from 2004 originally, but now it's on Microsoft Azure. And I'm wondering if this has anything to do with you know, van Rossum moving over to Microsoft? Yeah, I assume so. It's just it i don't i was gonna try to look at where I found this and I think just somebody mentioned that it moved to Azure like couple months ago or recently so yeah, funny. You know, another piece of news I caught that was not officially on the radar but a friend of the show and our friend Anthony Shaw. He is headed towards Guido as well you're that I did join Microsoft as a

00:19:16 some some kind of Python specialist I'm not sure so I hope I hope they throw some money on him to try to move him to the northwest and be cool. I would be cool. Yeah, then we can hang out the more he's far away in Australia which is a long way but it's gonna be hard for him to leave he lives on the beach and a pic Yeah, he always posts is like you know surfing report and stuff like that. Exactly. Cuz, like hard sometimes we serve for an Oregon. Yeah, with five seconds. Yeah. And we change color. Then we come out

00:19:50 all right. Uh, let's see. What's the next one here? Think? Yeah, so remember, right I did an extra extra extra extra the other day. Yeah.

00:20:00 That was because I had so much stuff. Well, let's do an extra extra, extra extra extra extra this time, because oh my goodness, there's so much stuff. I'm not just gonna turn this in another element here of the show. So first of all, we spoke about NumPy, in installing, I think it was on Big Sur was having some problem problems, it wouldn't install correctly. I don't remember if it was Windows, or Linux or Mac OS. I think it felt like it was Mac OS. But anyway, it was a problem with one of the platforms. But what was interesting is I got a message from Grice that hey, quick follow up on episode two on turning eight. Did you know, I didn't know Did you know that in your

00:20:43 requirements txt file, you can say like NumPy equal equal one dot 19 dot three semicolon, and then platforms, you could say platform underscore system equal equal windows, then another different version of NumPy. platform equals Linux. Another one platform equals Darwin.

00:21:03 naegele. Yeah, I had no idea. You could kind of split the requirements file to say the windows install gets this in the Linux install gets that. Oh, that's cool.

00:21:15 Yeah, I never seen this. But the problem was NumPy was not Oh, it was Windows update that broke NumPy. That's what it was. And so here's a way to pin the Windows version to an older NumPy. But let the other stuff be newer. That's what it was. So here's a really simple way to fix that, huh? Yeah. I hope I never need this trick. Yes, exactly. And then

00:21:40 I got a another message from William Silva. And he said, Hey, check this thing out. There's, you probably heard of material design, the way that Google styles, some other apps and so on. And we've all heard of probably the best way to build cross platform apps with sort of native widgets. As you know, maybe electron is the best way but native widgets would be with cutie, cutie. And pi side, six, and probably cutie pie cutie. I don't know if it's upgraded yet. But there's this cool theme that you can put on to make it look material, then that look neat. Oh, isn't he like it? Yeah, yeah. So so often these cross platform apps, they just look, or I don't know, they, they just look like they're standing out weird. But this looks really nice here. I totally like it. So I'll put that in the show notes. People can check that out. Number three, I just announced this. I thought it was pretty neat wrote a blog post that talk Python hit 20 million downloads.

00:22:43 And is the number two developer podcasts out there? I just found out. I was sort of wrote a blog post sort of celebrating that. You're

00:22:51 very impressive. Yeah. Crazy. Yeah. Thanks. Thanks. And by the way, Python bytes is around 6 million and go. And so we're pretty strong over here as well. Nice. Yeah. Awesome. pyramid pyramid to the web framework is coming out. And I actually tested it talk Python training, which about 25,000 lines of Python is written in it just upgraded. It ran everything all the PI test pass. Everything else is good. So pyramid twos looking solid, not too much changed, but it's good to see what's going. Oh, Python 391 is out with 282 changes from That's a lot. But let's go through them all. Yeah, okay. Well, I'm gonna say it like 10 1010 x speed, you don't mind? No. The other notable thing, almost the reason to bring this out is that the Python on Mac OS also ships as a universal binary, which means it has an Intel version and an apple in one version. And that leads to all sorts of interesting weirdness when you pip install things that expect Intel, but nonetheless, it's out there and people can start playing with it. I actually did a stream live stream number six with Paul Everett from JetBrains. So we're exploring what's the Python experience on the apple in one Mac Mini. So that's like an hour long video he and I did last Friday. And I will link that you can check it out. What's the original I know, the punch line is almost everything's works, but we couldn't get Jupiter lab to work for some reason. Okay. But everything else seemed to be pretty much fine. But the trick is,

00:24:26 you kind of need a lot of times you're going to work with something that maybe doesn't have an M one version of the package or the wheel. But if you go to the terminal, and you create a copy of it, and then you tell it to run under Rosetta, every Python command you issue becomes a Intel Python Python command.

00:24:50 So if you pip install something, it'll use the wheels for the Intel version of Mac, not the M one version of Mac and stuff like that.

00:24:57 It was kind of your escape hatch. Like once you open up that trouble

00:25:00 You've fallen back into the Intel world. So you have compatibility issues there.

00:25:06 Okay.

00:25:08 Anyway, we did a ton of that with stuff. Jerry, do you have an M one Mac, are you on?

00:25:14 I'm not on a Mac. I'm not on that. What's your OS of choice? Um,

00:25:21 well, Microsoft. Yeah, Windows. Awesome. Yeah. Yeah, they're doing good stuff. Like, there's a ton of Python things happening over there. That's pretty exciting. All right. And then last, yeah, this is brand shiny new. is we have the Python steering council selected. We have Pablo Galindo. We will William Carroll, William. Brett cannon.

00:25:46 Barry Warsaw. And last one.

00:25:50 Tea waters. Were all selected to be the new steering Council, folks. So that's exciting. And yeah. Yeah, that's it. Those are my extra extra six x extras.

00:26:04 Well, the cool. Yeah. Awesome. And

00:26:09 I guess last things talk about is a little computer vision. Yeah, so this is like a really cool product I found out about a few years ago. And it's called Open MV cam h seven is the latest one. It's a microcontroller development board with an onboard camera that runs machine vision algorithms with micro Python. The open MP ID and libraries make it really easy to run complex machine vision algorithms with simple Python code for things like color tracking, face detection, eye tracking. One particular application that I really like which I did, is detecting APR tags, which are like QR codes, in that their 2d binary patterns squares, but they encode a much smaller amount of bits between four and 12 bits rather than a QR code, which can store up to three kilobytes. And so by store encoding a smaller amount of data, it makes them easier to detect and be able to be robustly detected with variations in the camera, viewing angle and the lighting conditions and they can be detected from a longer distance. And, and so it's just so convenient because the open MBI D has an APR tag generator. So you can easily create the tags and print them out. And it has an APR tag my micro Python library so you can easily implement the algorithm. And the code will return the rotation and the ID code among other information about it. And the company open at V has said they want to be the Arduino machine vision. Because they have such an Arduino like user interface, you can view the output of the camera in the ID. And they actually just knots a few weeks ago that they're now partnered with Arduino to support computer vision on a new wireless Arduino board called Port 10 to h seven, with open MP firmware and the open MP ID he programmed in micro Python. And so it's really cool to be able to easily implement these complex machine vision algorithms with just a few lines of Python code on a plug and play STM 32 microcontroller board. And yeah, you know what it costs? On the latest one, I think it's I got it. It's like 60 or $60. I'm trying to remember now. Okay. 65. Yeah, yeah. 65. That's to set up little computer vision system for 65 bucks. That's cool. Yeah, I was very impressed. I was just taking out the box and running this using this example code that came with the ID and was able to detect these APR tags. And it's interesting to see how it compares to QR codes. And they're, they're more robust and detecting.

00:28:50 Yeah, okay. Yeah. And they have a little code example here. That's quite straightforward, right? You just set the pixel format, how many frames and then take a snapshot and run things like image dot fine blobs, and like magic happens on that line?

00:29:07 Yeah.

00:29:09 Yeah, that's super cool. So

00:29:13 one of the things that I've always wanted to do, and I don't know if I'll ever do, but I want to create an IoT course. And I would like the final exercise of the course to be setting up a camera. So you can have a multiplayer or a computer against human game, but have the computer do it through computer vision. So over like a checkers board, or a tic tac toe like you draw on the computer looks at it says I want to go there, or something like that would be so fun. It looks like this might be something like it used to make that happen.

00:29:44 Yeah, definitely. I read that you can run TensorFlow light on it, too. So you can train

00:29:51 AI can train models for AI with TensorFlow running on it right on right on the device, not shipping it to the cloud. Yeah.

00:30:00 Yeah, that make it really responsive. That's cool.

00:30:03 Brian, what do you think? What would you do with it?

00:30:06 I think you should run with the chat board thing and do a chess thing and then have it actually have the you should get into robotics also and have the that we're just moving on the clock comes out, grabs it.

00:30:23 You know, how about Settlers of Catan? Come on, if we can automate Settlers of Catan. And you'll be even better actually, would be,

00:30:33 not just have the computer play, but in this like whole weird social distancing Bizarro world we live in, like, you could set it up. So you and your friends just play.

00:30:44 And like both have a board. And the thing just tells you all your friend moved here, you got to move that over. That'd be great. I've never even got through the instructions on Settlers of Catan yet. One of my daughters loves it, and one of them hates it that I can't play. It takes so long. We can't do that.

00:30:59 Yeah, that's funny. But anyway, I think this is a cool device. And it'd be really fun to like, you know, play around with it. And 65 bucks for the whole thing. That seems pretty affordable. Yeah.

00:31:12 Yeah. Awesome.

00:31:14 All right. Well, what else have we got?

00:31:19 I don't have any extras. Brian. I've already gone through my six extras. You got any extras? I just have one shout out to I guess the, the Python community on Twitter. I just want to say, I don't know. I'm getting a little cheesy today and your Christmas. But this is a sort of a silly thing. But I saw there was a discussion on Twitter happened last night and today.

00:31:41 There was a somebody named Nicole Carlson that started this question of do you say it for kW args? Do you pronounce that keyword arguments? Or do you pronounce it? kwargs? Oh, my gosh. Um, and I had never considered pronouncing it. kwargs before. How about you, Michael?

00:32:02 I think I did. I think I do say kwargs. No, no, I say kW.

00:32:08 Okay, yeah. So that was brought up by a couple people that they use that Wr. That's what I say. And so I just I never even considered I like quarks. I'm gonna, I'm gonna start using that. Now. Someone comes from Star Trek. But yeah, cling on a Klingon word. I don't know. Or Yeah, we're cork from Deep Space Nine. Yeah. So I'm Vicki boyka said, I've never even considered not saying quarks. And a whole bunch of other people had different comments. And it just, I just wanted to bring this up, because it reminded me of like a conversation we'd have over beer or something at at pike on or in the, you know, in the hallway or something like that. And

00:32:49 that little bit of just stupid conversation around Python. I just really appreciate it. And I like that that little bit is is alive on Twitter, at least a little bit. So yeah.

00:33:02 Jerry, how do you say, oh, gosh, I'm actually I don't normally say.

00:33:09 What's funny is like when you there's all these different little acronyms, words and programming. And it's, it's funny when people they mostly just read them the whole time and all sudden, they have to save them. Right? Like, I pyp.org. Right. Like some people say pi and some people say, ipi and so on, right, I'm on the PI side, but it's it's just, you know, sometimes you don't have to pronounce it, but sometimes you do it. Yeah. Take on this issue. Yeah. This changed my life, though. I'm gonna quirks all the time now. Right on. Sounds good.

00:33:48 Sure, anything else you want to give a shout out to while we're here?

00:33:51 Um, I don't know. I mean, just thank you. Thank you so much for listening. And thank you for checking out my Kickstarter campaign for a gene code Python. Yeah, it's good to have you here this time. I think we should finish it with a joke. What do you think? Sure. All right, so I'm having this problem. I was I lived in this apartment complex. The fourth floor the fourth apartment on that floor and yeah, the the number of apartments for four but you know, what's the problem?

00:34:24 For for found exactly every time order a pizza delivery guy tells me it couldn't find the place. Was that was that really your apartment? No, I wish they'd been awesome.

00:34:36 No, I lived on 214 I don't know if that's an HTTP status code. But that's that's as close as pin one away. I don't know what 100 even really do and I know they their status codes, but I haven't. I don't know what to wait. I'll set my head either. But this one, this is a good one. I like it a lot.

00:34:55 Well, I got one last joke. Okay. So why do you suffer to that?

00:35:00 preserve many of them prefer dark mode.

00:35:05 Why it tell us because bugs are attracted to light? Oh, yes. Awesome. It has this on Twitter. It's terrible. But

00:35:15 and I told my fan it's one of those utilities sometimes some jokes you tell your family and they just stare at you?

00:35:22 Yeah, they don't they'll get I really quick I want to follow up with one comment from the live stream and if you're not listening, not interested, you know, you don't know about yet the live stream. We're also streaming this on to YouTube now. So check out Python bicep FM slash YouTube and you can subscribe to upcoming live streams. But Brian, there's a question here.

00:35:43 When's your second edition coming out? Comment? There is no plan to date. Okay. And then also we have the German version of kW arcs.

00:35:55 I say kV arcs.

00:35:59 kV. That's just like saying k w, the German pronunciation Argh. Yeah. Awesome. All right. Well, thanks so much, Sherry. Thanks for being here. Thank you so much. Thank you. That was really fun. Yeah, you bet. Bye. Bye, everyone. Thanks for watching.

