00:00:00 Hello, and welcome to Python bytes where we deliver Python news and headlines directly to your earbuds. This is Episode 234. And it's may 19 2021. I'm Michael Kennedy.

00:00:11 And I'm Brian rockin.

00:00:13 And we have our special guest, Dr. Becky smethurst. Welcome. Hi. I wasn't sure whether I was supposed to introduce myself then I was like, should I jump into standard fare for our podcast? We do a bad job preparing our guests for jumping in. Well, I love casual podcast and my favorite to listen to. And then now my favorite to be a part of. Yeah. Nice. Yeah. So it's, it's really good to have you here. And you know, you're doing so many neat things out on the internet. First of all, you're an astrophysicist at University of Oxford. Is my day job. Technically, yeah. You've written some books, you can tell folks about that. You are doing quite a bunch of interesting things over on YouTube, which is how I came to know you. Your work on YouTube is really neat. And yeah, maybe just tell people real quickly about yourself?

00:01:05 Yeah, sure. So I'm an astrophysicist. My day job is essentially to study supermassive black holes and figure out the effect that they have on their galaxies and how it might, they might stop the galaxies from forming stars, which is kind of awesome. I'm living the dream, as an eight year old to become like a natural space scientist. And yeah, I just love talking about science and space with people as well. And I've sort of found my niche a little bit on YouTube really, that I can put out videos each week about fun things in space, or even react to you know, old sci fi and stuff like that about what they got right and what they got wrong, necessarily. And it's just a great platform to communicate with people and respond to people's like, questions that they've never been able to Google. You know, the tagline is your friendly neighborhood astrophysicist. So

00:01:51 yeah, I absolutely recommend that people check out why that doesn't work. I absolutely recommend that people check out your YouTube channel is super neat. And yeah, there's there's a ton of fun videos there. They're, they're very good sort of general science just like interested in science, not scientists type of presentations. So super cool. And super cool. I Brian, you got the first item? Right? You want to take it away?

00:02:16 Yeah, sure. Um, Justin Ingram, just recently released a an updated version of the an article called powering the Python package index in 2021. Apparently, there was one. I think, like in the name Donald stuff did one about five years ago to how this was going on. So this is one of the this is kind of amazing to read. There's just some some cool information here. There were three, three maintainers, but it was mostly Donald, five years ago. And now, there are still three maintainers. But there's, it's Donald, Ernest dirt, Durbin, and Dustin Ingram, all doing the maintainers. But there's also more people. So there's more people involved. There's five different moderators, and three committers that, that help with the project. So that's it. And we've all seen it. It's just people are using it a lot more. And it's a it's more central part of our everyday life. So

00:03:21 yes, so what are some of the you know, I remember one of the really interesting things was just how much it costs to run pi pi.org. And the whole, like, all the data transfer behind the scenes and stuff like that.

00:03:32 Yeah. So let's, let's jump to some of the data. The data that this showed was just sort of mind blowing. We've got one, we're up to 1.7 billion requests on peipsi per day, sometimes and 55.4 terabytes every day,

00:03:52 five times more than even from 2018.

00:03:56 Yeah. Yeah. So this is amazing amount of data goes through there. And then they have they have data on files, python hosted.org. Also, there's some data on there. The the money that goes into it, fastly takes care of a lot of the brunt of the work. So Oh, fastly apparently is donating about what's the number $1.8 million or services a month, if we were to have to pay for the fastly services directly. And they give give pi pi 100% discount. So that's great, about 10 $10,000 with a services a month from Google and 7000, from AWS, and then a whole slew of other people that help out to like data dog and which is cool. And then there's some other funding sources that we've had some grants and we've talked about some of the grants that came through, but these are funding some some amazing projects like the rewrite of rewrite ipi localization, some malware detection, which is really needed when everybody's depending on this. And now it supports some support staff. They're hiring a project project manager soon. So

00:05:11 yeah, that's fantastic. Google came on as a visionary sponsor specifically to work on this and the security side of that, I believe.

00:05:18 Yeah. The one of the things I didn't know about, which we're going to provide a link to is the team maintains a thing called the fundamentals markdown page, which is a non exhaustive Wish List of large projects they'd like to see happen. So nice, because if you kind of it's sort of like a, you know, looking for what are we going to do, but it's, if we can do it, we'd like to do this. That's kind of neat.

00:05:43 That's amazing. I'd never stopped to think about how much work and how many people misuse Pie, pie, pie pie. I say bye, bye. But like, every time I type in PIP now I'm going to think differently. Like, it's just now I feel like I should go with this fundable list and like, Hey, I don't know, like, give something back for all the types. I've used it probably in frustration as well. Because it works, and not appreciated all the behind the scenes stuff.

00:06:14 So yeah, the first time I learned about this, I was blown away at how much it takes to keep it going. And how much do you think about how much we all depend upon this as people working in Python? What if it went away tomorrow? Yeah,

00:06:26 it was terrible. Most scientific research would probably collapse. So

00:06:33 I want to ask you, Dr. Becky, is I suspect that use conda and Anaconda a lot in the data science space. Are you are you a pet person,

00:06:41 I'm a person, I don't really use conda. Some of my colleagues do. Again, it's all just personal preferences. Really, I remember for a long time on the departmental computers. So the ones that were owned by the physics department, they didn't give you like install control. And so PIP wouldn't work. And it drove me nuts.

00:06:59 Back then,

00:07:02 it was like, No, you can only install like, software that has been approved, like by the IT department is just like,

00:07:10 it's not gonna work. Yeah, that's really rough. All right, super cool. Well, I wanted to try to bring in some astronomy type things that have to do Python, because of course, you're here, Dr. Becky, and Sharon. Ahmed. didn't really know that he contributed this to today, but it's more of a general conversation item put out on Twitter, like, Hey, I was looking for a Python generated at Star Atlas like the Leuven star. Alice, have you heard of this thing? No,

00:07:42 I haven't. Herschel star Atlas is the most famous one. But I'm guessing living is a bit of an update.

00:07:48 It's, um, it's a project by I'm sorry, I'm forgetting their name. Let's see if I can. Yeah, they just say I am I have to go back and pull it up later. So they wrote this. I am sorry. So it's, the goal is to make a publication quality stellar Atlas from scratch, using Python. So it's pretty neat. And the project is not finished, and who knows what the timeline is on it. But I wanted to just give it a shout out more as a way to think about what are the tools that people are using for astronomy, and Python. And also just building maps, you know, maybe you want to build a map of something completely different. Maybe you're really into river flows, and you want to build like amazing maps of like river flooding, or whatever, I think you could take the public data and like overlay the things kind of like they did here. So with this, I'll just go and find some pictures down here at the end. It's it's quite a long article talking about how all this works. But there's some really neat graphics that we can find. There we go. So they've got pictures of stars, variable stars, galaxies, Nebula, planetary nebula, and all kinds of things that you might care about fast moving stars. I suspect a lot of those might be looping around black holes. What do you think?

00:09:08 I mean, yeah, you probably wouldn't see those Astro metrically. But you probably get a list of variable stars at varying brightness.

00:09:14 Yeah, there's a call those out, particularly with like a double circle type of icon.

00:09:19 Yeah, yeah. So sorry, Astro. metrically means like, the ass drawn me position. So like, incredibly precise. So those kind of like what you just described like a wobble from a black hole. But again, you probably wouldn't see on a starless like this. It'd be like too fine of a detail, like too bright too small of a change. Yeah.

00:09:36 Yeah. Well, so talks about how do you go and create this thing says there's a one plot map.py that's 1500 lines long trying to write all this together. They talk about using the different libraries. So it was NumPy for all kinds of data handling. It was pylab and matplotlib. So all the graphics that you see here are just layers of map plot. renderings over and over and over. Yeah. And then the resist library called base map, which takes cares of projections and transformations. Because I think one of the challenges was how do you project this onto paper? You know, when it's on, you know, spherical thing? I think they said they used stereographic projections? I don't know it sounds about right. Yeah. That's all right. Yeah. sy pi. And that, of course, Astro pi, which I know Dr. Becky use a lot. And then round of applause for Astro pi. For celestial coordinate transformations. So yeah, a lot of neat. Not a lot of neat libraries on there. Yeah, I'm sure use Astro pi, like any other sound familiar.

00:10:44 All of them, I've used every single one of those packages before, especially Astro pi, like it's I have the same problem with like, I've taken an image with a telescope. And it's been taken by a flat digital detector, but there's coordinates that are sort of overlaid on that, that come from the sort of the surface of a sphere, you can think of it as right. And so you project that down using Astro pi and pi FM as well, because sometimes people work in different coordinates. So you can work in sky coordinates, which is sort of how high you are above the horizon and how far around you are. Or you can work in galactic coordinates, like with respect to the center of the Milky Way, like how far out are you and round, and I don't ever work in those but people, people who have Milky Way astronomers do and then you've got to like, so some objects, their coordinates are given in Milky Way coordinates in the sky coordinate, so they'll have to have done so many transformations to get maps like this. What's cool about this map, it's the constellation sickness, if you can see that. That's that's the swan, it looks like a big cross in the northern sky. But that is the constellation of the area of sky that the Kepler space telescope stat app.

00:11:51 So nice. So that's where the exoplanets have been discovered? Yeah,

00:11:54 pretty much. Yeah. All of the planets, we know, obviously, some, like 5000 of them will pretty much be in that patch of sky. So I'm really glad they chose that constellation. Oh, yeah.

00:12:04 Yeah. Oh, neat. Yeah. And then over here, let's see if I can find it talks about the sources of data. There's all these different public sources of data that they put together. But then if you read through the article, you'll find that they were talking about well, I think they spent a month and a half getting this far on the project. They're like, well, I went through here, and I had to correct all these things. Because they were, this data was a little bit off here. And that data was a little bit off there, and then had to label them. And another thing that was talked about a lot is, how do you create these pictures without text that overlaps? So I mentioned that things, just text. And we're able to actually take a matplotlib thing with labels and then rearrange the labels on the graph so that the the text doesn't overlap, which is really cool. hasn't

00:12:54 changed my life. Really. It's been solved. It exists, and it's just Python code. Isn't this cool? It's awesome. The flow like, Oh, I figured it out.

00:13:12 Super good. That's awesome. So yeah, there's there's a bunch of stuff. And one of the things that I really took away from this, always It reminds me of this quote that in the the whole data science, scientific computing world, like data cleaning, isn't the grunt work. It is the work sort of thing, because it's so much about Oh, yeah, I could just run these together. But then I spent a month fixing this and correcting that and offsetting that. And yeah, so Pretty neat, huh? That's really cool.

00:13:38 Yeah, I guess where I am in galactic coordinates. remember off the top of my head, but yeah, it does have galactic coordinates. I just don't know what they are.

00:13:49 So is the supermassive black hole at the center of the universe? Is that at 000?

00:13:53 The center of our galaxy? Yeah, yeah. So there's many galaxies in the universe, our galaxy, the Milky Way, the supermassive black hole, the center of it would be Yes, l equals zero, b equals zero.

00:14:04 So I'll say I guess final thought is, they say it takes about four hours to generate this map, running using four cores running in parallel, to actually render eggs that has so much data, and whatnot. But anyway, pretty neat. If you're looking to build maps with Python, here's a bit of a case study, I suspect.

00:14:22 Is it open source? Like is it on GitHub? Can you grab it yourself and have a play around?

00:14:26 I wish No, it's not. I looked around I couldn't find much of the code. There's little snippets of code shown. But yeah, that's I thought

00:14:34 I was thinking like, Can I get a section of sky I'm gonna print out I'm gonna frame it. It's gonna be really cool. I want to put on the wall. Yes.

00:14:47 All right, before we move on this just a quick shout out to Dr. Becky from predefined on the livestream. Yay. Dr. Becky is back. bought your book after watching the live stream with Michael I really enjoyed it. Even though you don't have a space backgrounds. Very cool. That's awesome. I'm so glad you enjoyed it. Yeah. All right. Speaking of things that we couldn't all enjoy and can take us back calculators,

00:15:08 yeah, I was thinking about how I haven't I haven't thought about my graphical calculator in a long time. Like, I swear, I was attached at the hip to that thing throughout high school, and then a little bit into university, but not so much because they were like, found in our university exams, because they thought that like it was, it was helpless, cheap, I guess. Like, it was so weird, go from high school where they were like, use your graphical calculators. And then at university, they said, No, don't use them. And I remember thinking like, after that I barely even thought about, I don't even use it in my everyday, like, work or life anymore. When a lot of the things I do, I can just use spotlight on my Mac, to do a quick calculation or whatever, I'll do it in Terminal or something like that. And then I saw this the other day, and I was just amazed by it. Because I remember this graphical calculator showing you you could get up graphs of you know, like, e to the x, or sine x, or cos x or something on your calculator. But the screen like was, it was like an old Gameboy or like a Nokia 3310. Right, it was the most pixelated screen in the world. And making those graphs was so frustrating. Like, it just wasn't intuitive. It wasn't fun, I didn't think. And then I saw this the other day where look at what like kids can see. They have this graphical calculator that has, you know, proper, beautiful, actual color screen, and that you can use Python on to make plots and do calculations. And I just think this is such a fantastic idea. Because teaching kids to code early is so important. Like it can be used in so many different areas of work, and life and science and everything like that. But I always find learning to code without a purpose necessarily is really difficult. Like just deciding one day, I'm gonna learn how to code where do you start, like, unless you've got a project, like what you do to the idea of learning as you're going through, and actually learning the math or learning the science with your graphical calculator is so good, because then it it just starts to come naturally to you. It's like, the first thing you think of to do to solve a problem is to use Python. So I'm just so excited that this is a thing and I hope it becomes like the calculator that kids have to buy, like if if they're going to do maths at like a higher level or something.

00:17:34 Weird programming languages that they that come You know, like Polish notation, reverse Polish notation, stuff like this is preparing them for proper programming.

00:17:44 Exactly. Yeah. And I think that if you learn it in this way, it will just become so second nature that then it's not a barrier for you to go on and do anything else. Right? It just becomes a tool that you can use to solve problems like in science or in you know, sort of development or software development or something like that. As you get into university and work on wider world, like having that knowledge from that age is it's so good. I mean, I got mine at like, 16 I don't know about if you guys remember when you got your graphical calculator, but I feel like at that age, I was impressionable, and it stuck with me.

00:18:19 Exactly. Yeah, I think I might have gotten mine really was a decent one. Right when I got to college, but yeah, I had even had one of the ti 90 threes that had a full QWERTY keyboard on it for a while. Yeah, that was I was fancy when I was a TA in grad school.

00:18:36 Yeah, that's the thing. I think I got them early cuz we specialize early in the UK. So like, I was only doing maths and science by 16. And he like 16 to 18. So that's why I got mine earlier. But yeah, like learning Python, that would have been so helpful because I got to university and they were like, okay, now terms, we'll invite them. But let's do it while we learn general relativity. Let's code up some general relativity. I was like, Okay, I'm still printing hello world like that here. So cool.

00:19:08 How you type into this thing, though?

00:19:11 Very slowly. Yeah, I imagine it probably just has like an old phone keyboard. So you know, three letters pin number, but it might have one of the four qualities like Michael was talking about.

00:19:22 So I think I think it's the more skinny tall ones, the more like an old phone. You know, it'd be awesome if you could transfer Python files over but yeah, it has like a repple and everything just have autocomplete. Oh, oh, yeah. I hadn't even thought about that. But yes, it better comments from the live stream. Marcel says Polish notation is the opposite of method chaining. Yeah. And Kim says graphical calculators would have been really handy in high school I never even seen before I got into engineering, Python and reverse Polish notation. Sounds tricky. Then penfield Roy from the Sai PI World. He says oh Yeah. He also told me he can't put things like sci fi on there, sadly, but hopefully, hopefully soon, and maybe this is just, you know, v1. Yeah, I guess packages in general, right? They talked about having turtle and stuff. But you know, I'm not sure how much they've added, how cool would it?

00:20:16 How cool would it be to have side by on there because then you could like plot a function and then you could like, optimize. And you could like find the solutions to a function that way. Probably skipping the differential equations that you're supposed to be learning.

00:20:31 partial differential equations are easy. I just say like, solve it, give it the number. Get your app through.

00:20:39 I think turtles kind of neat on there also. Because I mean, I programmed a sub hunt on my single line, reverse Polish notation, HP calculator, just because I could sort of thing. So I think doing some games in there might be kind of neat.

00:20:57 Yeah. Yeah. People definitely agree with you about it would be? Yeah, awesome. All right. Before we move on to the next one, I'll let me tell you about our sponsor this week. So this episode of Python bytes is brought to you by century I love to tree we use century. So how would you like to remove a little stress from your life? Do you worry that users might be having difficulties or encountering errors with your app right now? Would you even know? If they did until they send that email? How much better would it be to have error or performance details immediately sent to you, including call stacks, trace backs, values of local variables and even the logged in user that ran into the error? With Sentry. It's not just possible, but it's simple. We use Sentry, like I said, on all of our web apps on Python bytes and talk Python talk, but then trading courses and actually rent had somebody run into an error. I got a sentry notification that this user had a problem doing this thing. I fixed it and sent him an email and they said, Oh, that is incredible. I was about to email you about this problem I had, but it was late. So I was gonna do it tomorrow, and you already fixed it. So what a surprise. So surprise, and delight your users today, create your central account at Python bytes, FM slash century. And when you sign up, please, there's a button that says get a promo code, make sure that you enter Python bytes, all caps, all one word. And then you'll get the team plan, which gives you more features and more errors and so on. Not that you want more errors, but maybe more features is good. So Python bytes FM slash century, and promo code Python bytes. Ryan, you got the next one.

00:22:27 Okay. I gotta say, though, that the the artwork on that good center page was great. Yeah, it's very cool. Well, so I, so I've been trying to shift, doing a little bit more work with GitHub actions on my projects. And but you know, and there's probably great documentation somewhere, I just don't know where it is. So and I'm impatient. So I kind of want somebody to just say, for Python, this is what you do. So there's a few of these walkthroughs. But I like this one that I just saw recently. This one's Python package, ci CD with GitHub actions, just right what it says on the tin. But this is a kind of a nice walkthrough of all the different some of the different things in there going through an example project, of course, but it's nice, the the talk. So first off talks about kind of when you want actions to happen. So in in, in talking about when they happen, that this project happens on pull request and on push to certain branches. So in this case, main branch, but you really can pick several branches that you can do this on. And in to have actions happen on those, I kind of like having a couple of different development branches, especially on things that I'm active on and don't want to release yet. So these are nice. And then what else I'm going through a matrix of stuff. So this most of those articles talking about syntax checking on different things. I don't know if really that's important, but I probably do a PI test on multiple, multiple matrixes. So but the matrix, the notion of a matrix is kind of interesting, the having the different environment. So in this case, this person is talking about maybe running on multiple versions of Python, across Ubuntu, Mac OS and Windows. And that's exactly what I want those sorts of combinations to make sure something's working with other devices and stuff that you have. Do you see this maybe even some network as well, like with all the hardware devices and the different ways it's configured? Well, I couldn't use good news GitHub actions, but we definitely use matrices to to figure out which, you know, which tests have to run on different configurations, different hardware, and it's just exploding. But yeah, that's a different nightmare. But this one is taken care of for you. So it's a neat, neat thing to test. Across all those, and you know, I knew how to do it on tox, I knew how to do it on Travis and getting it to work and GitHub actions is just different. It's not harder, it's just different. So I appreciate this walkthrough. And then what go through running example of running tests, of course, and checking artifacts, which is interesting, I hadn't thought about that there's, you know, your build might generate, you know, documents or, or other artifacts that you want to keep around, having some checks around those as a good idea to, and then a couple of the last couple of bits. And really why I'm highlighting this is because I didn't really know how to do this is doing auto merges on some branches. So there's some branches that you'd like maybe you're maintaining, and nobody else has access to. But if you push to that you want tests to run and then automatically to merge to something and have it setting up auto merge. There's some some steps around that, which is, is pretty darn cool. And the last bit is pushing to peipsi. So release a release automation. So you can automatically in this case, setting up a rule so that if you push the tag that starts with a V, that means you've updated the version and you want that to push automatically out to peipsi. So hooking that up with GitHub actions,

00:26:22 that's clever. I'd never thought about triggering it off of a tag name. I've always thought of it just certain branch means ago, but yeah, this is that's clever. Yeah.

00:26:30 So that way, you can even even have, like a main branch that has updated workflow updated things, but it's not. It doesn't get pushed until there's a new version, which makes sense.

00:26:40 Yeah. Dr. Becky, what's the story with GitHub actions and all of your colleagues, people use it?

00:26:46 I don't think I even know what good is to be quite up. I had a drink. And I spared you from hearing we got before. Yeah. I don't even think I know. I've used GitHub actions to be quite honest. I'm sure some of my colleagues, I use GitHub all the time, obviously, but GitHub actions. Try to remember, I don't think so. Somebody has, though, but no,

00:27:08 yeah, for some people maintaining some of the packages and stuff.

00:27:11 That's what I was thinking, yeah, I don't think I have anything like that, to maintain that a lot of my colleagues put out stuff, but really, my code is for sort of my use and for any specific colleague that has like a science case use for it. But GitHub, I mean, I love a GitHub, because one of the things I love doing with it is committing when you've written like a scientific paper, I'll even put the latex on on GitHub, the what we what we'd sort of code our scientific writing in, right. And the PDF is included in your commits. And then you can make a gift from your commit history of like your PDF like building up like adding parts, in other words, adding it's one of my favorite things to do, once I've finished because it feels like it's it's like, ah, I've done this project. And now I feel like see it fully take form. And I remember I wrote my thesis, my entire PhD thesis in about two months because I got a job but I had to finish my PhD and I had to write it up. And I don't remember much from that whole two months time. It's it's a, it's a huge blip, except one vivid memory of the fire alarm going off the department and being like, get command. Remember this I've got this one commit message in my thesis repo. That's basically just I just molded the key just like the fire ops guy, go commit anything and get books. I was like, What if, like, what if I don't have a backup of like the past eight hours of writing I've just done it was a huge book. And I was just like, not losing this and people were like pulling me out of the room.

00:28:46 Right away. But yeah, that reminds me of a sign I saw Yes. case a fire one get commit to

00:29:01 it. I actually went through this but during a PhD thesis right up, which I would never recommend to anybody.

00:29:11 I'm amazed that you found this image so fast.

00:29:15 No problem. I got a couple comments from a live stream. Justin voice says love being able to use GitHub actions for deployment keeps me from botching deployment by making mistakes. I agree. do it more often if it's automatic, and the injured chances looks great, definitely got to hook this up to the packages I maintain. But which changed infrequently, so you don't have to remember the workflow and so on. And finally, Marcel Nelson says her GitHub is now offering free tier for institutions with unlimited contributors for private repos in $2,000 30,000 actions a month for $0. So,

00:29:51 yeah, that goes alongside with the academics package as well right for students. It's not just students. It's also anybody with like, a.edu Email or.ac.uk which is the universities over here. So I have like a load of free repos and stuff like that, which is great. So good. Yeah. Fantastic.

00:30:07 Oh, cool. All right, moving on to number five. Not this one, this one. So another spacey one. Another spacey one. Garrett done, gave us a shout out sitting SpaceX is now using Python for prototyping their starlink satellite software, which I don't know how I feel about starlight starlink. Dr. Becky, as an astronomer, it's like in your way, but as a way to empower people in remote places. It's kind of cool.

00:30:37 I'm really split about it to honest because I want it to go ahead. I think it's a really cool project. But I think what there's more compromises need to be made in order to, for it to work in the way that it could like, the most efficiently the way that it could. And I know like even before this launched, you take an image and you know, and not end up with a satellite trail, and you know, at least one of 10 I've taken, you know, telescope welding, so there's gonna be more, right, exactly, yeah. And it's not like something you can remove people, like, I'll just remove it as a source of noise. If that thing goes like right over your, you know, 15 minute exposure of a galaxy that's billions of light years away, and this massive bright thing just goes great with the middle and ruins it right, there's no rescuing that. So I do want it to go ahead. I do want it to work. But it's really cool that they're going to use Python like that could be something we could get warnings from, you know, like if it's something as accessible as Python, so to say something's going over, pause observation carry on or something, you know,

00:31:33 yeah, I would actually love to see SpaceX work more closely with all the satellite locations, observatories and say, Alright, here's how we're going to help you solve this problem. Yeah, that would be great. So yeah, diving into this. So Stack Overflow actually did a four part series on the software that SpaceX used to build all of their things in space. And this one in particular is about the network protocols. So if you look at how the starlink system works, it turns out that most of this stuff is c++, both on the ground systems and the things in the sky. So they talk about that their software breaks into two parts, software that flies and software that supports the things that fly south for the flies is all c++ that's on embedded chips on the satellites. But then on the ground, there's a whole bunch of communication API's and coordination API's. If you look over at where the satellites are, and where they're covering, there's these cool real time maps, I'll put one on the screen here, you could actually see them flying by here where Brian and I are pleased to zoom in on that area. And you can see the overlap of the signals of the different ones and how they're oriented and all kinds of stuff. So they need to adjust and move the satellites around in orchestration and orchestrate them basically. So the software that does that, it's in production version and c++, but they do a lot of simulations and prototyping in Python to figure out how that works. Because, you know, think about the inbody problem, but for 1000s, or hundreds of 1000s of these things to keep them all working together, the combinatorics of it get out of control really quick, they say. So there's a lot of simulations that need to be done. And they do that in Python. And once they get the working version, then they rewrite that in c++. Do you think there's a cool picture? Right? Yeah, that's really cool. Yeah, and speaking of GitHub actions, they probably are actually using GitHub for this. But it doesn't explicitly say, but you think of organizations that have a hard time deploying their code, like you'll go to a website, like our website is down all of Sunday, because we're deploying a new version like, Are you kidding me? This is 2021, like this should be git push, wait a few seconds, and it's now the new version. Anyway, this is pretty interesting, because they say the software is developed in a continuous integration environment, with teams merging into the master development branch often and deploying to all the satellites weekly. adds an extra level of panic to you get pushed, doesn't it? I wasn't ready. All the thoughts. I like stopped responding whoops. Though, yeah. Python version allows them to wrap for rapid iteration during the design phase. I'm not so happy they write in c++. So yeah, anyway, pretty cool. I'll link to some of these, these maps that track it, and the four part series and so on. So Garrett, thank you for that.

00:34:29 It's really cool to see because it's very similar to what Space Telescope are doing for the James Webb Space Telescope. So sorry, Space Telescope is the institution in Baltimore that manages like the Hubble Space Telescope and the new one that's going to hopefully launch in October Scott, the James Webb Space Telescope. And I think that's a similar sort of platform and that a lot of this spacecraft sort of mechanics is done with the sort of the usual comms that they have possibly c++, but a lot of the tools they put together for astronomers who are planning observations like where to point how Long that will take and all those kinds of things when they're sort of deciding, I want to use this to do the science. That's all been done in Python, like all of the sort of tutorials of like, how to figure out how much like James Webb Space Telescope be able to see if this thing you want to look at is all done in like ipython notebooks do bytes, or I guess we should call them now. Yeah. So it's really cool to see that, like, it's, you know, it's it's not just like these major academic institutions that are picking up Python, because they know, it's the academics that use that, but it's companies like SpaceX as well, I guess, because they know their employees like, well with Python. So, oh, that's really cool.

00:35:35 I knew a lot of the telescopes, we're using Python, but and that's gonna be a massive new telescope, the James Webb telescope is gonna it's going to be a big deal, right?

00:35:45 Yeah, it's gonna be a huge deal. We've all got Fingers crossed, that launch actually happens, because it was originally planned for 10 years ago, and three years ago.

00:35:55 Yeah, fingers crossed. I guess we're coming soon. All right. Dr. Becky, you got the next one.

00:36:00 Yeah. So I feel like I've done the sign test thing of bringing a scientific paper to a Python class, but I'm bringing what I know. And so I found this, this paper A while back when I was sort of, you know, doing the thing of like, you're an expert in something because you know, what, to Google looking for something. And I found this paper, the beginner's guide to working with astronomical data. And it's very much written as if you're, you know, a poor PhD student that's come in and your your, your professor said, Hey, here's a lot of data, please analyze it, and you'll know where to start. So that's kind of who it's written for. And I think if you were really keen amateur astronomer, and I know a lot of people do want to get in, I do want to get into Astro photography, and possibly did during the pandemic with lockdowns and stay at home orders. And perhaps might have set up something with like a Raspberry Pi, you know, to control a telescope it to know where it's pointing something like that, or even to adopt it with a camera as well. And then they have all these images, that they then want to remove noise and get like a beautiful color image of something as well. And they're not entirely sure how to do it. But they might know Python, I use bison to, you know, analyze the images that come off the back of professional telescopes. So you could do it with amateur telescopes, or amateur count, you know, just a SLR camera, you've set up in your back garden to take an image of something. But you want to see fainter and fainter things, you have to take lots and lots of like short images, so you don't get you know, motion blur and stuff like that with the with actually the rotation of the earth. But they're all the wrong coordinates. So what do you do, because they're not only safe place, so you use Astro pi to figure out, you know how to do this and

00:37:41 realign the images to adjust for that rotation.

00:37:44 Exactly, yeah, you can do that. And so, but there's obviously lots of other steps that you need to do like taking out noise. So this actually talks through, like all of the steps that would go into what a professional would do. And I reading it, I think it's so well written that I think someone who is a really keen amateur and who wants to get into Astro photography, and do the, you know, reduction, as we call it, of the images, you know, make them look extra pretty by the end of it. with Python, because they're a keen Python person, I think this would be the thing to be like, right, I'm gonna make this my bedtime reading. It's it's very, very long. But I think you could definitely make this like a project if if someone was keen enough to do and so that's why I thought I'd, I'd bring it and I feel like obviously, we need a huge shout out to Astro pi. Moffatt, live and everything like that for making these kinds of things possible with, you know, images that you can take in your back garden and stuff that you can get out. But you know, this, you know, someone in a in a month or so, they're really keen on Python, and they're really keen on taking photos of the night sky. You could be getting images of galaxies and Nebula, like amazing, you know, so, so I thought

00:38:53 I'd bring them out, yeah, printed out and put it up as artwork in your house or something. That'd be fantastic. Instead of just saying that's a that's a cool picture of a galaxy, like I took that picture that galaxy, that's totally different.

00:39:04 Exactly. Yeah. You know, I could imagine someone getting an amazing picture of Andromeda, you know, and following these steps that are outliers. And I think it's easier because especially if you know, Python, there's no learning curve with a new tool, or a new or like frustration with a GUI, right? That's just this like, interface, what's going on and how to use it. Because it's just pure Python. I think it if you already know Python, it's definitely the easiest way to get into this because it'll be something familiar with with something new. So even though it's a scientific paper, it would get would pass. So

00:39:39 yeah, it looks super interesting. And the code doesn't look terribly challenging. But you know, it's exactly what you need to solve the problems, right. Exactly. Yeah. Oh, cool. All right. I think that's it for our six items. Brian,

00:39:50 you got anything? No, just apologies to the stream people. For some reason my video stream is frozen.

00:39:56 I think it might just be really, really Zen. Still, I thought he was really interested in the paper boy, he was like, wow. You've mesmerized and so the eye tip before we move on, actually, Justin Boyd says, Thanks for bringing this Dr. Becky I did pick up Astro photography barely as a hobby during the pandemic, and it looks good. So yeah, already already.

00:40:19 Taking that like biggest step to go from like, Oh, cool. Like I've managed to photograph some scars to getting like the galaxies. Nebula, I think this will this will help people take that step. I think so.

00:40:29 Yeah, for sure. I got a couple of quick shout outs at the end. First, I want to point out that if you'd like this conversation, check out Episode 303 of talk Python, where Dr. Becky and I dive all into the Python astronomy world. That was fun. And then I just met with one of the founders of this company called qaboun. To focus which I thought was a pretty interesting idea. So the what they're going for is, you know, the way that Apple works is right, you know, they make the Mac and then they make Mac OS and that tight integration of those two things works better than just you bringing pieces together and building your own sort of thing, right? That's sort of the same idea, but for Linux, and so it's really focused on people who do AI type of work or just want to have a really good desktop Linux environment. So for example, down here the bottom keeping it in the space world, we have Chris Matt men who, by refresh it or come up with the right time, maybe it's supposed to suck, right? Anyway, Chris mapman said he works at JPL, who he did some machine learning training on his MacBook Pro and took like, 37 hours and on this thing, because he had these crazy GPUs, these like GeForce 3080s and stuff in the laptop, they did it in like an hour and a half instead of 37 hours or whatever it was. So and by the way, you can actually buy it like these these new GeForce chips or cards, they're basically unobtainium, right? You can't get to them. So yeah, anyway, pretty, pretty interesting. If you're looking for a desktop, Linux world, check that out. By Dr. Beck, anything you would like to give a shout out to maybe I could throw out your Amazon page. And yeah,

00:42:13 sure. Yeah. Yeah, so I've written a book. So it's got different names everywhere in the world just to confuse everybody so in the US and Canada it's called space at the speed of light in the UK and pretty much everywhere else in the world that space 10 things you should know and then there's also the the German edition as well, which

00:42:34 gration canal,

00:42:36 Rosa now Yeah, exactly. It's a good book title. It's, it's essentially, it's written for anyone who is a complete beginner in space, but has always maybe been a bit a bit curious, would love this book, it's, it's like, the 10 things that if you were going to be at a dinner party, and you'd be like, Hey, did you know this, like, these are the things you should know about space, right. But I also think about it. I also think anybody who's been keen on space, as well will also get a kick out of it. Because it takes ideas that you might have heard before, but then just as an intellectual level of like, where we are right now on the edge of like, our understanding of this thing, so it's a really short read as well. It's not having sort of big everything, it's really skinny. My laptop's currently propped on top of it, otherwise, I would disrupt everything. So um, yeah, if people want to check that out, please do or if you have like, I don't know, an uncle or an aunt or a nephew or a niece or whatever that you think would would like that. It's a good gift. So

00:43:41 Rihanna asked, Is it really big? Nope, it's not that big. Yeah, Ben says, I can vouch for the book. Yeah, absolutely. And then also says that Brian imported Zen.

00:43:58 I've got a close friend that does has a telescope, and he always wants to talk about space. And I know nothing. So I'm definitely gonna read this book. So I can talk to him.

00:44:07 There you go. Yeah. So perfect for that. All right, I have, we always close out the show with a joke. But I went and found some space means because Dr. vecchia is here. And you've done a couple of videos on reacting to space memes. And so I thought maybe some space memes would be appropriate,

00:44:24 as are just so fun, because people click on them. And they're like, I just learned more in this 15 minute video about space memes I did in my entire high school career.

00:44:35 And I'm like, that was always my intention.

00:44:39 I draw you in with the means and then I hit you with the sides.

00:44:43 Exactly, exactly. It's so good. Yeah, so maybe we can link to some of the proper ones you've done. There's lots I'm gonna throw out for a quick little last base means that they force it. I can't remember what the names I gave them each a title. So the first one is Uber. So there's Matt Damon sitting on all alone. Remember he gets abandoned there. He says, where's my Uber and then there's the Ilan musk rose jerry sandusky says I'll be there in a minute.

00:45:12 I mean, I don't know whose definition of minute that is. Seriously, why did they load Tesla into space? Every time? I'm reminded that they did this, I'm like, but why? Why? It's no reason.

00:45:29 Because they could. Just because they could they never stopped to think whether they should.

00:45:37 Yeah, well, it's the same company that is rockin Dogecoin. So you know. Alright, next one, this one called flaws. spaceship design. Here's a picture of a spaceship with a cutout. So you can see inside it says when building a spaceship, the tiniest details are crucial. For example, this spaceship may be flawed because it has a giant hole in the side. Like, like sweet laughing that's the level. Still.

00:46:11 I do love these like, they're like a hybrid between a really scientific diagram and then something you would put out to the public or use it a talk or something like that. I don't remember the, the, the ELT the Extremely Large Telescope, which I know is a stupid name. That used emperor penguins for scale. In like the public image was like, who knows how big an emperor penguin?

00:46:41 height is that a waist? What

00:46:42 are we talking here?

00:46:44 Apparently it was because on average, an emperor penguin is a meter high. So they were like, Oh, it's like a meter rule. But nobody knows that. Like just put a cube

00:46:58 out there. And the legend says Boy, that mileage on that test. Tesla would make it really hard to resell. I agree. I like that. Alright, the next one is distracted. There's a cat in a spacesuit staring. mesmerized by the red.on the wall missed space launch.

00:47:14 I'm now wondering if there's been any like catster notes in previous there's been dogs astronauts, keystroke notes. But

00:47:24 I don't know. I think base I propose a new thing. Like maybe a cat could spend some time on the International Space Station. Just think of all the memes and all the funny videos.

00:47:35 I don't think it would have a good time. It's constantly tries to like have it's like hackles raised. Zero GS, goes in a small circle really slowly. Maybe you know how they this videos online where they put like sellotape on the back of a car and it constantly like crouches to go under something that's not there. Maybe it would do something like that. I'm really intrigued now, zero G what would it do?

00:48:07 Phil says Congo tried to send a rat, who wants

00:48:10 to send a rat like I need a cat to solve the rat in space probe.

00:48:14 And they said also, Justin says space toys are hard space litter boxes are nearly impossible. And sandwiches like you really think they could get a cat to go into a space rocket. Immediately open the door of this space rocket, the cat or just Dart under the bed but you can't get it when you dig it. Alright, let's round it out. The last one space Vegas. It's a black hole. What happens in a black hole stays in a black hole. Nice space Vegas. I like That's right. Yeah, I know. We talked about this one before, but it made it in a second time. I guess instead of Sin City. Would it be like bins city? Spin City? Yeah. state and city? Yeah, maybe things rotate as they go into the black hole. Right? They don't just go straight. Okay.

00:49:04 Yeah, it's actually really, really hard to grow a black hole and make stuff all in which everyone's really surprised, because they think they're like bruises. But most stuff just orbits them. Like the Earth orbits the Sun. It's just a kind of a heavier sun that we can't see. Right. So most of orbits, it doesn't fall in and it's takes a lot of effort to make stuff fallen. So

00:49:22 nice. Well, once it's in it stays there. Yeah. Fantastic. All right. Well, Dr. Becky, thanks for being here. It was really great to have you and Brian. Thanks as always. Yeah, you bet. Bye, everyone.

